<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Wed, 07 May 2025 15:21:26 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: baselinePlayground</title>
		<dateCreated>Thu, 01 May 2025 13:07:50 GMT</dateCreated>
		<dateModified>Wed, 07 May 2025 15:21:26 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 3, 19, 38, 40, 43</expansionState>
		<vertScrollState>18</vertScrollState>
		<windowTop>425</windowTop>
		<windowLeft>1060</windowLeft>
		<windowBottom>1118</windowBottom>
		<windowRight>2346</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/baselineplayground/">
			<outline text="worknotes.md" created="Wed, 18 Dec 2024 17:19:15 GMT">
				<outline text="#### 5/4/25; 5:16:04 PM by DW" created="Sun, 04 May 2025 21:16:03 GMT">
					<outline text=".divStory -- removed border, padding" created="Sun, 04 May 2025 21:17:15 GMT"/>
					</outline>
				<outline text="#### 5/1/25; 9:08:56 AM by DW" created="Thu, 01 May 2025 13:08:55 GMT">
					<outline text="Made this a &lt;a href=&quot;https://github.com/scripting/baselinePlayground&quot;&gt;GitHub project&lt;/a&gt;." created="Thu, 01 May 2025 13:08:57 GMT"/>
					<outline text="Cleaned up line-height, it should simply be a property of divStory, and not specified separately for lists and paragraphs." created="Thu, 01 May 2025 13:51:29 GMT"/>
					</outline>
				<outline text="#### 5/1/25; 8:39:36 AM by DW" created="Sat, 21 Dec 2024 14:40:15 GMT">
					<outline text="moved the footer down a bit" created="Thu, 01 May 2025 12:39:48 GMT"/>
					<outline text="added some links to the demo text" created="Thu, 01 May 2025 12:39:57 GMT"/>
					<outline text="changed the way links are displayed" created="Thu, 01 May 2025 12:40:04 GMT"/>
					<outline text="added @media style for phone and tablet" created="Thu, 01 May 2025 12:51:45 GMT"/>
					</outline>
				</outline>
			<outline text="styles.css" created="Wed, 30 Apr 2025 14:11:42 GMT">
				<outline text="@import url('https://fonts.googleapis.com/css?family=Oswald:400,700');" isComment="true"/>
				<outline text="" isComment="true" created="Mon, 27 Jan 2025 20:26:53 GMT"/>
				<outline text="body {">
					<outline text="background-color: white;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="width: 750px;"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="margin-top: 50px;"/>
					<outline text="margin-bottom: 400px;"/>
					<outline text="min-height: 400px;" created="Sun, 04 Jun 2023 15:38:29 GMT"/>
					<outline text="padding: 3px;" isComment="true" created="Sun, 04 Jun 2023 15:38:37 GMT"/>
					<outline text="border: 1px solid silver;" isComment="true" created="Sun, 04 Jun 2023 15:37:55 GMT"/>
					<outline text="background-color: white;" isComment="true" created="Sun, 04 Jun 2023 15:38:02 GMT"/>
					<outline text="font-family: Ubuntu, Arial, sans-serif;" created="Wed, 30 Apr 2025 15:20:01 GMT"/>
					<outline text="font-family: Arial, sans-serif;" isComment="true" created="Wed, 30 Apr 2025 15:20:01 GMT"/>
					<outline text="font-size: 24px;" created="Mon, 14 Apr 2025 22:04:23 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Wed, 30 Apr 2025 14:34:25 GMT"/>
				<outline text=".divPageTop {" created="Wed, 30 Apr 2025 14:38:18 GMT">
					<outline text="text-align: center;" created="Wed, 30 Apr 2025 14:57:04 GMT"/>
					<outline text="margin-bottom: 60px;" created="Wed, 30 Apr 2025 14:50:57 GMT"/>
					<outline text="line-height: 110%;" created="Wed, 30 Apr 2025 14:57:56 GMT"/>
					<outline text="}" created="Wed, 30 Apr 2025 14:38:21 GMT"/>
					</outline>
				<outline text=".divPageTop .divSiteTitle {" created="Wed, 30 Apr 2025 14:34:26 GMT">
					<outline text="font-size: 48px;" created="Wed, 30 Apr 2025 14:38:00 GMT"/>
					<outline text="font-weight: bold;" created="Wed, 30 Apr 2025 14:46:52 GMT"/>
					<outline text="margin-bottom: 10px;" created="Wed, 30 Apr 2025 14:46:57 GMT"/>
					<outline text="letter-spacing: -0.04em;"/>
					<outline text="}" created="Wed, 30 Apr 2025 14:37:59 GMT"/>
					</outline>
				<outline text=".divPageTop .divSiteDescription {" created="Wed, 30 Apr 2025 14:34:26 GMT">
					<outline text="color: rgb(123, 123, 123);" created="Wed, 30 Apr 2025 14:38:00 GMT"/>
					<outline text="font-size: 14px;" created="Wed, 30 Apr 2025 14:44:39 GMT"/>
					<outline text="}" created="Wed, 30 Apr 2025 14:37:59 GMT"/>
					</outline>
				<outline text="" created="Wed, 30 Apr 2025 14:34:26 GMT"/>
				<outline text=".divStory {" created="Wed, 30 Apr 2025 14:34:27 GMT">
					<outline text="line-height: 100%;" created="Wed, 30 Apr 2025 14:53:30 GMT"/>
					<outline text="border: solid 1px lavender;" isComment="true" created="Thu, 01 May 2025 13:59:05 GMT"/>
					<outline text="padding: 15px;" isComment="true" created="Thu, 01 May 2025 13:59:14 GMT"/>
					<outline text="}" created="Wed, 30 Apr 2025 14:38:40 GMT"/>
					</outline>
				<outline text=".divStory .divStoryTitle {" created="Wed, 30 Apr 2025 14:34:26 GMT">
					<outline text="font-size: 32px;" created="Wed, 30 Apr 2025 14:38:00 GMT"/>
					<outline text="font-weight: bold;" created="Wed, 30 Apr 2025 14:46:52 GMT"/>
					<outline text="margin-bottom: 5px;" created="Wed, 30 Apr 2025 14:46:57 GMT"/>
					<outline text="letter-spacing: -0.04em;"/>
					<outline text="line-height: 110%;" isComment="true" created="Wed, 30 Apr 2025 14:57:56 GMT"/>
					<outline text="}" created="Wed, 30 Apr 2025 14:37:59 GMT"/>
					</outline>
				<outline text=".divStory .divLineUnderStoryTitle {" created="Wed, 30 Apr 2025 14:44:10 GMT">
					<outline text="color: rgb(123, 123, 123);" created="Wed, 30 Apr 2025 14:38:00 GMT"/>
					<outline text="font-size: 14px;" created="Wed, 30 Apr 2025 14:44:39 GMT"/>
					<outline text="margin-left: 2px;" created="Wed, 30 Apr 2025 15:02:38 GMT"/>
					<outline text="}" created="Wed, 30 Apr 2025 14:44:15 GMT"/>
					</outline>
				<outline text="" created="Wed, 30 Apr 2025 14:53:02 GMT"/>
				<outline text=".divStoryBody {">
					<outline text="margin-top: 25px;" created="Wed, 30 Apr 2025 14:56:27 GMT"/>
					<outline text="font-size: 16px;" created="Wed, 30 Apr 2025 14:39:18 GMT"/>
					<outline text="}" created="Wed, 30 Apr 2025 14:56:38 GMT"/>
					</outline>
				<outline text=".divStoryBody p {" created="Wed, 30 Apr 2025 14:53:03 GMT">
					<outline text="font-size: 18px;" isComment="true" created="Wed, 30 Apr 2025 14:39:18 GMT"/>
					<outline text="line-height: 135%;" isComment="true" created="Wed, 30 Apr 2025 14:53:30 GMT"/>
					<outline text="margin-bottom: 10px;" created="Wed, 30 Apr 2025 15:05:41 GMT"/>
					<outline text="}" created="Wed, 30 Apr 2025 14:53:07 GMT"/>
					</outline>
				<outline text=".divStoryBody a, .divFooter a {" created="Wed, 30 Apr 2025 14:53:03 GMT">
					<outline text="color: #0088cc;" created="Thu, 01 May 2025 12:38:48 GMT"/>
					<outline text="text-decoration: underline;" created="Thu, 01 May 2025 12:38:42 GMT"/>
					<outline text="cursor: pointer;" created="Thu, 01 May 2025 12:44:29 GMT"/>
					<outline text="}" created="Wed, 30 Apr 2025 14:53:07 GMT"/>
					</outline>
				<outline text=".divStoryBody h3 {">
					<outline text="font-size: 20px; /* a little bigger than paragraph text */" created="Wed, 30 Apr 2025 14:39:18 GMT"/>
					<outline text="font-weight: bold;" created="Wed, 30 Apr 2025 15:21:58 GMT"/>
					<outline text="margin-bottom: 0;" created="Wed, 30 Apr 2025 15:26:06 GMT"/>
					<outline text="}" created="Wed, 30 Apr 2025 15:21:24 GMT"/>
					</outline>
				<outline text=".divStoryBody ol, .divStoryBody ul {" created="Wed, 30 Apr 2025 14:53:03 GMT">
					<outline text="font-size: 18px; /* controls the size of the numbers or bullets */" isComment="true" created="Wed, 30 Apr 2025 15:10:19 GMT"/>
					<outline text="margin-top: .5em;" created="Wed, 30 Apr 2025 15:17:26 GMT"/>
					<outline text="margin-bottom: 1em;" created="Wed, 30 Apr 2025 15:17:26 GMT"/>
					<outline text="}" created="Wed, 30 Apr 2025 14:53:07 GMT"/>
					</outline>
				<outline text=".divStoryBody li {">
					<outline text="margin-bottom: 5px;" created="Wed, 30 Apr 2025 15:11:52 GMT"/>
					<outline text="line-height: inherit;" created="Thu, 01 May 2025 13:49:42 GMT"/>
					<outline text="}" created="Wed, 30 Apr 2025 15:11:57 GMT"/>
					</outline>
				<outline text="" created="Thu, 01 May 2025 12:38:28 GMT"/>
				<outline text=".divCategories {" created="Wed, 30 Apr 2025 15:27:31 GMT">
					<outline text="margin-top: 3em;" created="Wed, 30 Apr 2025 15:37:36 GMT"/>
					<outline text="color: rgb(123, 123, 123);" created="Wed, 30 Apr 2025 14:38:00 GMT"/>
					<outline text="font-size: 14px;" created="Wed, 30 Apr 2025 14:44:39 GMT"/>
					<outline text="}" created="Wed, 30 Apr 2025 15:27:38 GMT"/>
					</outline>
				<outline text="" created="Wed, 30 Apr 2025 15:28:28 GMT"/>
				<outline text=".divFooter {" created="Wed, 30 Apr 2025 15:28:30 GMT">
					<outline text="margin-top: 100px;" created="Wed, 30 Apr 2025 15:32:44 GMT"/>
					<outline text="border-top: 1px solid silver;" isComment="true" created="Wed, 30 Apr 2025 15:32:52 GMT"/>
					<outline text="padding-top: 10px;" isComment="true" created="Wed, 30 Apr 2025 15:33:12 GMT"/>
					<outline text="text-align: center;" created="Wed, 30 Apr 2025 15:33:01 GMT"/>
					<outline text="font-size: 14px;" created="Wed, 30 Apr 2025 14:44:39 GMT"/>
					<outline text="}" created="Wed, 30 Apr 2025 15:28:35 GMT"/>
					</outline>
				<outline text="" created="Thu, 01 May 2025 12:47:42 GMT"/>
				<outline text="@media screen and (max-width: 1024px) { /* styles for phone, tablet */">
					<outline text=".divPageBody {">
						<outline text="width: 95%;"/>
						<outline text="margin-top: 80px;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Thu, 01 May 2025 13:57:14 GMT"/>
				<outline text="" created="Thu, 01 May 2025 13:57:14 GMT"/>
				<outline text="" created="Thu, 01 May 2025 13:57:14 GMT"/>
				<outline text="" created="Thu, 01 May 2025 13:57:15 GMT"/>
				</outline>
			<outline text="code.js" created="Mon, 06 Jun 2022 15:20:22 GMT">
				<outline text="" created="Fri, 21 Feb 2025 22:01:15 GMT"/>
				<outline text="function spinningImage (userOptions) {" isComment="true" created="Fri, 21 Feb 2025 22:01:15 GMT">
					<outline text="Changes" isComment="true" created="Wed, 26 Feb 2025 20:07:32 GMT">
						<outline text="2/26/25; 3:07:35 PM by DW" created="Wed, 26 Feb 2025 20:07:34 GMT">
							<outline text="https://github.com/n3r4zzurr0/svg-spinners" created="Wed, 26 Feb 2025 20:07:36 GMT"/>
							</outline>
						</outline>
					<outline text="var options = {" created="Fri, 21 Feb 2025 22:03:02 GMT">
						<outline text="whereToAppend: $(&quot;body&quot;)," created="Fri, 21 Feb 2025 22:03:22 GMT"/>
						<outline text="theSvg: `" created="Fri, 21 Feb 2025 22:03:59 GMT">
							<outline text="&lt;svg fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;g&gt;&lt;circle cx=&quot;12&quot; cy=&quot;2.5&quot; r=&quot;1.5&quot; opacity=&quot;.14&quot;&gt;&lt;/circle&gt;&lt;circle cx=&quot;16.75&quot; cy=&quot;3.77&quot; r=&quot;1.5&quot; opacity=&quot;.29&quot;&gt;&lt;/circle&gt;&lt;circle cx=&quot;20.23&quot; cy=&quot;7.25&quot; r=&quot;1.5&quot; opacity=&quot;.43&quot;&gt;&lt;/circle&gt;&lt;circle cx=&quot;21.50&quot; cy=&quot;12.00&quot; r=&quot;1.5&quot; opacity=&quot;.57&quot;&gt;&lt;/circle&gt;&lt;circle cx=&quot;20.23&quot; cy=&quot;16.75&quot; r=&quot;1.5&quot; opacity=&quot;.71&quot;&gt;&lt;/circle&gt;&lt;circle cx=&quot;16.75&quot; cy=&quot;20.23&quot; r=&quot;1.5&quot; opacity=&quot;.86&quot;&gt;&lt;/circle&gt;&lt;circle cx=&quot;12&quot; cy=&quot;21.5&quot; r=&quot;1.5&quot;&gt;&lt;/circle&gt;&lt;animateTransform attributeName=&quot;transform&quot; type=&quot;rotate&quot; calcMode=&quot;discrete&quot; dur=&quot;0.75s&quot; values=&quot;0 12 12;30 12 12;60 12 12;90 12 12;120 12 12;150 12 12;180 12 12;210 12 12;240 12 12;270 12 12;300 12 12;330 12 12;360 12 12&quot; repeatCount=&quot;indefinite&quot;&gt;&lt;/animateTransform&gt;&lt;/g&gt;&lt;/svg&gt;"/>
							<outline text="`," created="Fri, 21 Feb 2025 22:04:27 GMT"/>
							</outline>
						<outline text="}" created="Fri, 21 Feb 2025 22:03:07 GMT"/>
						</outline>
					<outline text="mergeOptions (userOptions, options);" created="Fri, 21 Feb 2025 22:03:08 GMT"/>
					<outline text="" created="Fri, 21 Feb 2025 22:02:34 GMT"/>
					<outline text="const spinContainer = $(&quot;&lt;div class=\&quot;spinner\&quot;&gt;&lt;/div&gt;&quot;);" created="Fri, 21 Feb 2025 22:06:27 GMT"/>
					<outline text="spinContainer.append (options.theSvg);" created="Fri, 21 Feb 2025 22:07:15 GMT"/>
					<outline text="options.whereToAppend.append (spinContainer);" created="Fri, 21 Feb 2025 22:05:32 GMT"/>
					<outline text="" created="Fri, 21 Feb 2025 22:05:54 GMT"/>
					<outline text="this.stop = function () {" created="Fri, 21 Feb 2025 22:04:52 GMT">
						<outline text="spinContainer.remove ();" created="Fri, 21 Feb 2025 22:11:34 GMT"/>
						<outline text="}" created="Fri, 21 Feb 2025 22:05:03 GMT"/>
						</outline>
					<outline text="}" created="Fri, 21 Feb 2025 22:01:32 GMT"/>
					</outline>
				<outline text="function setupCustomTooltips () {" isComment="true">
					<outline text="" created="Mon, 14 Apr 2025 21:38:34 GMT"/>
					<outline text="$(&quot;.myTooltip&quot;).each (function () {" created="Mon, 14 Apr 2025 21:38:34 GMT">
						<outline text="const tooltipText = $(this).data (&quot;tooltip-text&quot;);"/>
						<outline text="console.log (tooltipText);" created="Mon, 14 Apr 2025 21:39:53 GMT"/>
						<outline text="" created="Mon, 14 Apr 2025 21:51:04 GMT"/>
						<outline text="const theTip = $(&quot;&lt;div class=\&quot;custom-tooltip\&quot; style=\&quot;display: none;\&quot;&gt;&quot; + tooltipText + &quot;&lt;/div&gt;&quot;);"/>
						<outline text="" created="Mon, 14 Apr 2025 21:49:11 GMT"/>
						<outline text="$(this).click (function () {" created="Mon, 14 Apr 2025 22:02:45 GMT">
							<outline text="console.log (&quot;click&quot;);" created="Mon, 14 Apr 2025 22:01:43 GMT"/>
							<outline text="});" created="Mon, 14 Apr 2025 22:02:52 GMT"/>
							</outline>
						<outline text="$(this).on (&quot;mouseenter&quot;, function () {" created="Mon, 14 Apr 2025 21:49:12 GMT">
							<outline text="console.log (&quot;mouseenter&quot;);" created="Mon, 14 Apr 2025 22:01:43 GMT"/>
							<outline text="const offset = me.offset ();"/>
							<outline text="theTip.css ({" created="Mon, 14 Apr 2025 21:52:10 GMT">
								<outline text="top: offset.top - theTip.height () - 10,"/>
								<outline text="left: offset.left + (me.width () / 2) - (theTip.width () / 2),"/>
								<outline text="position: &quot;absolute&quot;,"/>
								<outline text="zIndex: 1060"/>
								<outline text="});" created="Mon, 14 Apr 2025 21:52:15 GMT"/>
								</outline>
							<outline text="$(&quot;body&quot;).append (theTip);" created="Mon, 14 Apr 2025 21:53:37 GMT"/>
							<outline text="theTip.fadeIn (200);"/>
							<outline text="});" created="Mon, 14 Apr 2025 21:50:21 GMT"/>
							</outline>
						<outline text="" created="Mon, 14 Apr 2025 21:49:12 GMT"/>
						<outline text="});" created="Mon, 14 Apr 2025 21:38:54 GMT"/>
						</outline>
					<outline text="" created="Mon, 14 Apr 2025 21:38:34 GMT"/>
					<outline text="" created="Mon, 14 Apr 2025 21:38:35 GMT"/>
					<outline text="}" created="Mon, 14 Apr 2025 21:38:15 GMT"/>
					</outline>
				<outline text="" created="Sat, 22 Feb 2025 17:21:07 GMT"/>
				<outline text="function startup () {" created="Thu, 13 Feb 2025 21:26:34 GMT">
					<outline text="console.log (&quot;startup&quot;);" created="Mon, 14 Apr 2025 21:35:18 GMT"/>
					<outline text="hitCounter ();" created="Wed, 30 Apr 2025 17:57:11 GMT"/>
					<outline text="setupCustomTooltips ();" isComment="true"/>
					<outline text="const theSpinner = new spinningImage ({" isComment="true" created="Fri, 21 Feb 2025 22:02:04 GMT">
						<outline text="whereToAppend: $(&quot;.spinner&quot;)," created="Fri, 21 Feb 2025 22:03:22 GMT"/>
						<outline text="});" created="Fri, 21 Feb 2025 22:02:57 GMT"/>
						</outline>
					<outline text="setTimeout (function () {" isComment="true" created="Fri, 21 Feb 2025 22:08:23 GMT">
						<outline text="theSpinner.stop ();" created="Fri, 21 Feb 2025 22:08:52 GMT"/>
						<outline text="}, 10000);" created="Fri, 21 Feb 2025 22:08:35 GMT"/>
						</outline>
					<outline text="}" created="Thu, 13 Feb 2025 22:07:09 GMT"/>
					</outline>
				<outline text="" created="Sat, 22 Feb 2025 15:43:55 GMT"/>
				<outline text="old stuff" isComment="true" created="Mon, 10 Feb 2025 14:43:38 GMT">
					<outline text="function getTheOpml () {" isComment="true" created="Sat, 22 Feb 2025 17:21:07 GMT">
						<outline text="const url = &quot;https://firesky.tv/opml?list=https://bsky.app/profile/did:plc:3t37x6vfigdzzp2gjcfnzlz4/lists/3ling3swmwv2w&quot;;" created="Sat, 22 Feb 2025 17:21:23 GMT"/>
						<outline text="" created="Sat, 22 Feb 2025 17:21:35 GMT"/>
						<outline text="readHttpFile (url, function (opmltext) {" created="Sat, 22 Feb 2025 17:21:35 GMT">
							<outline text="console.log (opmltext);" created="Sat, 22 Feb 2025 17:23:25 GMT"/>
							<outline text="});" created="Sat, 22 Feb 2025 17:23:22 GMT"/>
							</outline>
						<outline text="" created="Sat, 22 Feb 2025 17:21:35 GMT"/>
						<outline text="https://firesky.tv/opml?list=https://bsky.app/profile/did:plc:3t37x6vfigdzzp2gjcfnzlz4/lists/3ling3swmwv2w" isComment="true" created="Sat, 22 Feb 2025 17:21:35 GMT"/>
						<outline text="}" created="Sat, 22 Feb 2025 17:21:25 GMT"/>
						</outline>
					<outline text="function serverpost (path, params, callback) {" isComment="true">
						<outline text="const url = urlTextcastingServer + path;" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
						<outline text="for (var x in params) { //5/30/23 by DW -- work around bug in buildParamList" created="Tue, 30 May 2023 13:56:52 GMT">
							<outline text="if (params [x] === undefined) {" created="Tue, 30 May 2023 13:57:16 GMT">
								<outline text="delete params [x];" created="Tue, 30 May 2023 13:57:28 GMT"/>
								<outline text="}" created="Tue, 30 May 2023 13:57:33 GMT"/>
								</outline>
							<outline text="}" created="Tue, 30 May 2023 13:56:58 GMT"/>
							</outline>
						<outline text="const filedata = buildParamList (params, false);" created="Tue, 30 May 2023 13:31:41 GMT"/>
						<outline text="$.post (url, filedata, function (data, status) {" created="Sat, 09 Aug 2014 15:59:33 GMT" pgfnum="43210">
							<outline text="if (status == &quot;success&quot;) {" created="Sat, 09 Aug 2014 16:04:22 GMT" pgfnum="43217">
								<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
									<outline text="callback (undefined, data);" created="Sat, 09 Aug 2014 16:04:47 GMT" pgfnum="43222"/>
									<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
									</outline>
								<outline text="}" created="Sat, 09 Aug 2014 16:04:38 GMT" pgfnum="43219"/>
								</outline>
							<outline text="else {" created="Sat, 09 Aug 2014 16:04:39 GMT" pgfnum="43220">
								<outline text="var err = {">
									<outline text="code: status.status,"/>
									<outline text="message: JSON.parse (status.responseText).message"/>
									<outline text="};"/>
									</outline>
								<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
									<outline text="callback (err);"/>
									<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
									</outline>
								<outline text="}" created="Sat, 09 Aug 2014 16:04:41 GMT" pgfnum="43221"/>
								</outline>
							<outline text="});" created="Sat, 09 Aug 2014 16:00:26 GMT" pgfnum="43214"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function sendToBluesky (thePrefs, callback) {" isComment="true" created="Mon, 29 May 2023 17:00:39 GMT">
						<outline text="" created="Thu, 13 Feb 2025 21:26:26 GMT"/>
						<outline text="const params = {" created="Tue, 30 May 2023 13:07:30 GMT">
							<outline text="urlsite: thePrefs.siteurl,"/>
							<outline text="mailaddress: thePrefs.mailaddress,"/>
							<outline text="password: thePrefs.password,"/>
							<outline text="title: thePost.title,"/>
							<outline text="description: thePost.markdowntext,"/>
							<outline text="link: thePost.link"/>
							<outline text="}" created="Tue, 30 May 2023 13:07:36 GMT"/>
							</outline>
						<outline text="serverpost (&quot;bluesky&quot;, params, callback);" created="Tue, 30 May 2023 13:13:48 GMT"/>
						<outline text="}" created="Mon, 29 May 2023 17:00:55 GMT"/>
						</outline>
					<outline text="function sendPostToTextcasting (thePost) { //5/29/23 by DW" isComment="true" created="Mon, 29 May 2023 16:59:25 GMT">
						<outline text="function sendToMastodon (thePrefs, callback) {" created="Mon, 29 May 2023 17:00:39 GMT">
							<outline text="const params = {" created="Tue, 30 May 2023 13:07:30 GMT">
								<outline text="urlsite: thePrefs.siteurl,"/>
								<outline text="accesstoken: thePrefs.accesstoken,"/>
								<outline text="title: thePost.title,"/>
								<outline text="description: thePost.markdowntext,"/>
								<outline text="link: thePost.link"/>
								<outline text="}" created="Tue, 30 May 2023 13:07:36 GMT"/>
								</outline>
							<outline text="serverpost (&quot;mastodon&quot;, params, callback);" created="Tue, 30 May 2023 13:13:48 GMT"/>
							<outline text="}" created="Mon, 29 May 2023 17:00:55 GMT"/>
							</outline>
						<outline text="function sendToTwitter (thePrefs, callback) {" created="Mon, 29 May 2023 17:00:39 GMT">
							<outline text="const params = {" created="Tue, 30 May 2023 13:07:30 GMT">
								<outline text="apikey: thePrefs.apikey,"/>
								<outline text="apikeysecret: thePrefs.apikeysecret,"/>
								<outline text="accesstoken: thePrefs.accesstoken,"/>
								<outline text="accesstokensecret: thePrefs.accesstokensecret,"/>
								<outline text="title: thePost.title,"/>
								<outline text="description: thePost.markdowntext,"/>
								<outline text="link: thePost.link"/>
								<outline text="}" created="Tue, 30 May 2023 13:07:36 GMT"/>
								</outline>
							<outline text="serverpost (&quot;twitter&quot;, params, callback);" created="Tue, 30 May 2023 13:13:48 GMT"/>
							<outline text="}" created="Mon, 29 May 2023 17:00:55 GMT"/>
							</outline>
						<outline text="function sendToWordpress (thePrefs, callback) {" created="Mon, 29 May 2023 17:00:39 GMT">
							<outline text="const params = {" created="Tue, 30 May 2023 13:07:30 GMT">
								<outline text="urlsite: thePrefs.siteurl,"/>
								<outline text="username: thePrefs.username,"/>
								<outline text="password: thePrefs.password,"/>
								<outline text="title: thePost.title,"/>
								<outline text="description: thePost.markdowntext,"/>
								<outline text="link: thePost.link"/>
								<outline text="}" created="Tue, 30 May 2023 13:07:36 GMT"/>
								</outline>
							<outline text="serverpost (&quot;wordpress&quot;, params, callback);" created="Tue, 30 May 2023 13:13:48 GMT"/>
							<outline text="}" created="Mon, 29 May 2023 17:00:55 GMT"/>
							</outline>
						<outline text="console.log (&quot;sendPostToTextcasting: thePost == &quot; + jsonStringify (thePost));" created="Tue, 30 May 2023 13:01:55 GMT"/>
						<outline text="theFeedland.getUserPrefs (function (err, thePrefs) {" created="Sun, 07 May 2023 15:50:39 GMT">
							<outline text="console.log (jsonStringify (thePrefs));" isComment="true" created="Mon, 29 May 2023 17:01:34 GMT"/>
							<outline text="if (thePrefs.apps.mastodon.enabled) {" created="Tue, 30 May 2023 13:06:16 GMT">
								<outline text="sendToMastodon (thePrefs.apps.mastodon, function (err, data) {" created="Tue, 30 May 2023 13:06:40 GMT">
									<outline text="if (err) {" created="Tue, 30 May 2023 13:17:05 GMT">
										<outline text="console.log (&quot;sendToBluesky: err.message == &quot; + err.message);" created="Tue, 30 May 2023 13:17:07 GMT"/>
										<outline text="}" created="Tue, 30 May 2023 13:17:30 GMT"/>
										<outline text="" created="Tue, 30 May 2023 13:17:32 GMT"/>
										</outline>
									<outline text="else {" created="Tue, 30 May 2023 13:36:18 GMT">
										<outline text="console.log (&quot;sendToBluesky: data == &quot; + jsonStringify (data));" created="Tue, 30 May 2023 13:17:07 GMT"/>
										<outline text="}" created="Tue, 30 May 2023 13:36:20 GMT"/>
										</outline>
									<outline text="});" created="Tue, 30 May 2023 13:18:11 GMT"/>
									</outline>
								<outline text="}" created="Tue, 30 May 2023 13:06:28 GMT"/>
								</outline>
							<outline text="if (thePrefs.apps.bluesky.enabled) {" created="Tue, 30 May 2023 13:06:16 GMT">
								<outline text="sendToBluesky (thePrefs.apps.bluesky, function (err, data) {" created="Tue, 30 May 2023 13:06:40 GMT">
									<outline text="if (err) {" created="Tue, 30 May 2023 13:17:05 GMT">
										<outline text="console.log (&quot;sendToBluesky: err.message == &quot; + err.message);" created="Tue, 30 May 2023 13:17:07 GMT"/>
										<outline text="}" created="Tue, 30 May 2023 13:17:30 GMT"/>
										<outline text="" created="Tue, 30 May 2023 13:17:32 GMT"/>
										</outline>
									<outline text="else {" created="Tue, 30 May 2023 13:36:18 GMT">
										<outline text="console.log (&quot;sendToBluesky: data == &quot; + jsonStringify (data));" created="Tue, 30 May 2023 13:17:07 GMT"/>
										<outline text="}" created="Tue, 30 May 2023 13:36:20 GMT"/>
										</outline>
									<outline text="});" created="Tue, 30 May 2023 13:18:11 GMT"/>
									</outline>
								<outline text="}" created="Tue, 30 May 2023 13:06:28 GMT"/>
								</outline>
							<outline text="if (thePrefs.apps.wordpress.enabled) {" created="Tue, 30 May 2023 13:06:16 GMT">
								<outline text="sendToWordpress (thePrefs.apps.wordpress, function (err, data) {" created="Tue, 30 May 2023 13:06:40 GMT">
									<outline text="if (err) {" created="Tue, 30 May 2023 13:17:05 GMT">
										<outline text="console.log (&quot;sendToWordpress: err.message == &quot; + err.message);" created="Tue, 30 May 2023 13:17:07 GMT"/>
										<outline text="}" created="Tue, 30 May 2023 13:17:30 GMT"/>
										<outline text="" created="Tue, 30 May 2023 13:17:32 GMT"/>
										</outline>
									<outline text="else {" created="Tue, 30 May 2023 13:36:18 GMT">
										<outline text="console.log (&quot;sendToWordpress: data == &quot; + jsonStringify (data));" created="Tue, 30 May 2023 13:17:07 GMT"/>
										<outline text="}" created="Tue, 30 May 2023 13:36:20 GMT"/>
										</outline>
									<outline text="});" created="Tue, 30 May 2023 13:18:11 GMT"/>
									</outline>
								<outline text="}" created="Tue, 30 May 2023 13:06:28 GMT"/>
								</outline>
							<outline text="if (thePrefs.apps.twitter.enabled) { //8/19/24 by DW" created="Tue, 30 May 2023 13:06:16 GMT">
								<outline text="sendToTwitter (thePrefs.apps.twitter, function (err, data) {" created="Tue, 30 May 2023 13:06:40 GMT">
									<outline text="if (err) {" created="Tue, 30 May 2023 13:17:05 GMT">
										<outline text="console.log (&quot;sendToTwitter: err.message == &quot; + err.message);" created="Tue, 30 May 2023 13:17:07 GMT"/>
										<outline text="}" created="Tue, 30 May 2023 13:17:30 GMT"/>
										<outline text="" created="Tue, 30 May 2023 13:17:32 GMT"/>
										</outline>
									<outline text="else {" created="Tue, 30 May 2023 13:36:18 GMT">
										<outline text="console.log (&quot;sendToTwitter: data == &quot; + jsonStringify (data));" created="Tue, 30 May 2023 13:17:07 GMT"/>
										<outline text="}" created="Tue, 30 May 2023 13:36:20 GMT"/>
										</outline>
									<outline text="});" created="Tue, 30 May 2023 13:18:11 GMT"/>
									</outline>
								<outline text="}" created="Tue, 30 May 2023 13:06:28 GMT"/>
								</outline>
							<outline text="});" created="Sun, 07 May 2023 15:50:54 GMT"/>
							</outline>
						<outline text="}" created="Mon, 29 May 2023 17:00:28 GMT"/>
						</outline>
					<outline text="const options = {" isComment="true" created="Mon, 10 Feb 2025 15:18:48 GMT">
						<outline text="urlsite: &quot;https://bsky.social/&quot;,"/>
						<outline text="mailaddress: &quot;dave.wi.ner@gmail.com&quot;,"/>
						<outline text="password: &quot;vmjr-ixkq-3ull-kjhd&quot;,"/>
						<outline text="title: getRandomSnarkySlogan (),"/>
						<outline text="description: &quot;I'm describing something here that I think might be of interest.&quot;,"/>
						<outline text="link: &quot;https://www.cbssports.com/nba/news/nba-all-star-game-hawks-trae-young-to-replace-injured-bucks-giannis-antetokounmpo/&quot;"/>
						<outline text="};" created="Mon, 10 Feb 2025 15:18:58 GMT"/>
						</outline>
					<outline text="" created="Mon, 10 Feb 2025 14:43:38 GMT"/>
					<outline text="" created="Mon, 10 Feb 2025 14:43:38 GMT"/>
					<outline text="" created="Mon, 10 Feb 2025 14:43:38 GMT"/>
					<outline text="" created="Mon, 10 Feb 2025 14:43:39 GMT"/>
					<outline text="" created="Mon, 10 Feb 2025 14:43:39 GMT"/>
					<outline text="" created="Mon, 10 Feb 2025 14:43:39 GMT"/>
					<outline text="" created="Mon, 10 Feb 2025 14:43:39 GMT"/>
					<outline text="var appConsts = {" isComment="true">
						<outline text="productname: &quot;threadWriter&quot;," created="Tue, 28 Jan 2025 16:49:11 GMT"/>
						<outline text="productnameForDisplay: &quot;THREAD WRITER&quot;," created="Tue, 28 Jan 2025 16:49:27 GMT"/>
						<outline text="urlTextcastingServer: &quot;https://api.textcasting.org/&quot;," created="Tue, 30 May 2023 13:14:01 GMT"/>
						<outline text="defaultEditorButtons: [&quot;bold&quot;, &quot;italic&quot;, &quot;strikethrough&quot;, &quot;underline&quot;],"/>
						<outline text="defaultEditorButtons: [&quot;bold&quot;, &quot;italic&quot;, &quot;anchor&quot;, &quot;h3&quot;, &quot;h4&quot;, &quot;orderedlist&quot;, &quot;unorderedlist&quot;, &quot;quote&quot;]," isComment="true"/>
						<outline text="editorPlaceholderText: &quot;Something interesting goes here.&quot;," created="Fri, 21 Apr 2023 14:01:28 GMT"/>
						<outline text="flMarkdownProcess: true," created="Tue, 28 Jan 2025 21:00:53 GMT"/>
						<outline text="minSecsBetwRecalcs: 3" created="Tue, 28 Jan 2025 22:14:30 GMT"/>
						<outline text="};"/>
						</outline>
					<outline text="var appPrefs = {" isComment="true" created="Fri, 04 Jan 2013 13:52:28 GMT" pgfnum="16628">
						<outline text="" created="Tue, 28 Jan 2025 16:44:45 GMT"/>
						<outline text="ctStarts: 0," created="Tue, 28 Jan 2025 16:44:45 GMT"/>
						<outline text="whenLastStart: undefined," created="Tue, 28 Jan 2025 16:44:52 GMT"/>
						<outline text="whenFirstStart: undefined," created="Tue, 28 Jan 2025 16:44:59 GMT"/>
						<outline text="" created="Tue, 28 Jan 2025 16:44:45 GMT"/>
						<outline text="stringAfterNumber: &quot;/&quot;, "/>
						<outline text="ctSecsBetwTweets: 1, "/>
						<outline text="hashTag: &quot;&quot;, "/>
						<outline text="flIncludeTotalTweets: true,"/>
						<outline text="flLinkWarningReceived: false,"/>
						<outline text="flPublishRss: true, rssTitle: &quot;&quot;, rssLink: &quot;&quot;, rssDescription: &quot;&quot;, rssMaxHistory: 50, rssHistory: [], flRssPrefsInitialized: false, rssFeedUrl: &quot;&quot;," isComment="true"/>
						<outline text="" created="Tue, 13 Jun 2023 21:20:21 GMT"/>
						<outline text="leadingQuestion: &quot;How are you!?&quot;," created="Sat, 10 Jun 2023 17:03:45 GMT"/>
						<outline text="editorPlaceholderText: &quot;Do you come here often?&quot;," created="Fri, 09 Jun 2023 15:41:18 GMT"/>
						<outline text="" created="Tue, 13 Jun 2023 21:16:27 GMT"/>
						<outline text="blueskyEnabled: true, //6/13/23 by DW" created="Tue, 13 Jun 2023 17:32:43 GMT"/>
						<outline text="blueskySiteurl: &quot;https://bsky.social/&quot;," created="Tue, 13 Jun 2023 17:32:43 GMT"/>
						<outline text="blueskyMailaddress: &quot;&quot;," created="Tue, 13 Jun 2023 17:32:43 GMT"/>
						<outline text="blueskyPassword: &quot;&quot;," created="Tue, 13 Jun 2023 17:32:43 GMT"/>
						<outline text="" created="Wed, 14 Jun 2023 15:17:04 GMT"/>
						<outline text="maxPostLength: 280, //6/14/23 by DW" created="Wed, 14 Jun 2023 15:17:04 GMT"/>
						<outline text="" created="Wed, 14 Jun 2023 15:35:32 GMT"/>
						<outline text="savedText: &quot;&quot;, //6/14/23 by DW" created="Wed, 14 Jun 2023 15:35:32 GMT"/>
						<outline text="" created="Thu, 15 Jun 2023 18:18:30 GMT"/>
						<outline text="myFeedTitle: &quot;My Feed&quot;, //6/15/23 by DW" created="Thu, 15 Jun 2023 18:18:30 GMT"/>
						<outline text="myFeedDescription: &quot;It's just a feed for now&quot;," created="Thu, 15 Jun 2023 18:18:30 GMT"/>
						<outline text="" created="Sun, 24 Sep 2023 16:20:45 GMT"/>
						<outline text="flIncludePrefix: true //9/24/23 by DW" created="Sun, 24 Sep 2023 16:20:45 GMT"/>
						<outline text="};" created="Fri, 04 Jan 2013 22:10:46 GMT" pgfnum="16700"/>
						</outline>
					<outline text="var flPrefsChanged = false;" isComment="true" created="Tue, 28 Jan 2025 16:43:31 GMT"/>
					<outline text="" isComment="true" created="Tue, 28 Jan 2025 18:14:25 GMT"/>
					<outline text="var tweetArray = new Array ();" isComment="true" created="Fri, 09 Jun 2023 15:22:25 GMT"/>
					<outline text="var theEditor;" isComment="true" created="Fri, 09 Jun 2023 15:40:51 GMT"/>
					<outline text="var lastTextArrayContents = &quot;&quot;;" isComment="true"/>
					<outline text="var whenLastKeystroke = new Date (0);" isComment="true" created="Tue, 13 Jun 2023 16:30:13 GMT"/>
					<outline text="const turndownService = new TurndownService ();" isComment="true"/>
					<outline text="var whenLastRecalc = new Date ();" isComment="true" created="Tue, 28 Jan 2025 22:13:22 GMT"/>
					<outline text="" isComment="true" created="Tue, 28 Jan 2025 16:43:39 GMT"/>
					<outline text="function isDave () {" isComment="true" created="Mon, 28 Oct 2024 15:54:40 GMT">
						<outline text="if (localStorage.isDave !== undefined) {" created="Fri, 24 Jan 2025 18:26:16 GMT">
							<outline text="return (getBoolean (localStorage.isDave));" created="Fri, 24 Jan 2025 18:26:36 GMT"/>
							<outline text="}" created="Fri, 24 Jan 2025 18:26:30 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 28 Jan 2025 18:15:14 GMT">
							<outline text="return (false);" created="Tue, 28 Jan 2025 18:15:17 GMT"/>
							<outline text="}" created="Tue, 28 Jan 2025 18:15:21 GMT"/>
							</outline>
						<outline text="}" created="Mon, 28 Oct 2024 15:54:49 GMT"/>
						</outline>
					<outline text="function speakerClick () {" isComment="true" created="Sat, 21 Dec 2024 14:47:40 GMT">
						<outline text="const audio = new Audio (&quot;//s3.amazonaws.com/scripting.com/publicfolder/downloads/podcasts/2024/12/21/click.mp3&quot;);"/>
						<outline text="audio.play ();"/>
						<outline text="}" created="Sat, 21 Dec 2024 14:47:48 GMT"/>
						</outline>
					<outline text="function prefsChanged () {" isComment="true" created="Tue, 28 Jan 2025 16:43:39 GMT">
						<outline text="flPrefsChanged = true;" created="Tue, 28 Jan 2025 16:43:46 GMT"/>
						<outline text="}" created="Tue, 28 Jan 2025 16:43:45 GMT"/>
						</outline>
					<outline text="function setObjectVisibility (theObject, flMakeVisible) { //6/13/23 by DW" isComment="true" created="Tue, 13 Jun 2023 14:41:53 GMT">
						<outline text="if (theObject.css (&quot;visibility&quot;) == &quot;visible&quot;) { //is it currently visible?" created="Fri, 05 May 2023 16:54:09 GMT">
							<outline text="if (!flMakeVisible) {" created="Fri, 05 May 2023 16:56:40 GMT">
								<outline text="theObject.css (&quot;visibility&quot;, &quot;hidden&quot;)" created="Fri, 05 May 2023 16:55:28 GMT"/>
								<outline text="}" created="Fri, 05 May 2023 16:56:43 GMT"/>
								</outline>
							<outline text="}" created="Fri, 05 May 2023 16:55:08 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 05 May 2023 16:55:09 GMT">
							<outline text="if (flMakeVisible) {" created="Fri, 05 May 2023 16:55:17 GMT">
								<outline text="theObject.css (&quot;visibility&quot;, &quot;visible&quot;)" created="Fri, 05 May 2023 16:55:28 GMT"/>
								<outline text="}" created="Fri, 05 May 2023 16:55:21 GMT"/>
								</outline>
							<outline text="}" created="Fri, 05 May 2023 16:55:11 GMT"/>
							</outline>
						<outline text="}" created="Tue, 13 Jun 2023 14:42:49 GMT"/>
						</outline>
					<outline text="function markdownToHtml (s) {" isComment="true" created="Tue, 02 Nov 2021 14:12:22 GMT">
						<outline text="if (appConsts.flMarkdownProcess) { //9/23/23 by DW" created="Sat, 23 Sep 2023 16:01:10 GMT">
							<outline text="var md = new Markdown.Converter ();"/>
							<outline text="return (md.makeHtml (s));"/>
							<outline text="}" created="Sat, 23 Sep 2023 16:01:13 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 23 Sep 2023 16:01:24 GMT">
							<outline text="return (s);" created="Sat, 23 Sep 2023 16:01:26 GMT"/>
							<outline text="}" created="Sat, 23 Sep 2023 16:01:29 GMT"/>
							</outline>
						<outline text="}" created="Tue, 02 Nov 2021 14:12:45 GMT"/>
						</outline>
					<outline text="function htmlToMarkdown (htmltext) {" isComment="true" created="Sat, 10 Jun 2023 14:14:28 GMT">
						<outline text="Changes" isComment="true" created="Sat, 10 Jun 2023 14:34:59 GMT">
							<outline text="6/10/23; 10:23:15 AM by DW" created="Sat, 10 Jun 2023 14:23:09 GMT">
								<outline text="If you type a list like this:" created="Sat, 10 Jun 2023 14:23:21 GMT">
									<outline text="1. Oregon" created="Sat, 10 Jun 2023 14:25:07 GMT"/>
									<outline text="2. Oklahoma" created="Sat, 10 Jun 2023 14:25:11 GMT"/>
									<outline text="3. Omaha" created="Sat, 10 Jun 2023 14:25:16 GMT"/>
									</outline>
								<outline text="The  converter will add a backslash in front of the period, so it doesn't get converted to a list when imported. " created="Sat, 10 Jun 2023 14:25:22 GMT"/>
								<outline text="I found this confusing, and I bet others would too. I tried to undo this, but wasn't able to figure out how to pass backslashes through the replacing code." created="Sat, 10 Jun 2023 14:25:57 GMT"/>
								<outline text="So for now, if you have to make a list here, use the command to make one, don't do it by hand. " created="Sat, 10 Jun 2023 14:35:49 GMT"/>
								</outline>
							</outline>
						<outline text="if (appConsts.flMarkdownProcess) { //9/23/23 by DW" created="Sat, 23 Sep 2023 16:01:10 GMT">
							<outline text="var mdtext = turndownService.turndown (htmltext);"/>
							<outline text="" created="Sat, 10 Jun 2023 14:31:31 GMT"/>
							<outline text="mdtext = replaceAll (mdtext, &quot;\\\\.&quot;, &quot;.&quot;);" isComment="true" created="Sat, 10 Jun 2023 14:31:31 GMT"/>
							<outline text="console.log (mdtext);" isComment="true" created="Sat, 10 Jun 2023 14:33:17 GMT"/>
							<outline text="" created="Sat, 10 Jun 2023 14:31:31 GMT"/>
							<outline text="const replaceTable = {" isComment="true" created="Sat, 10 Jun 2023 14:26:51 GMT">
								<outline text="&quot;\\\\.&quot;: &quot;.&quot;" created="Sat, 10 Jun 2023 14:27:02 GMT"/>
								<outline text="}" created="Sat, 10 Jun 2023 14:27:26 GMT"/>
								</outline>
							<outline text="mdtext = multipleReplaceAll (mdtext, replaceTable, false, &quot;&quot;, &quot;&quot;);" isComment="true"/>
							<outline text="" created="Sat, 10 Jun 2023 14:36:22 GMT"/>
							<outline text="return (mdtext);"/>
							<outline text="}" created="Sat, 23 Sep 2023 16:01:13 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 23 Sep 2023 16:01:24 GMT">
							<outline text="return (htmltext);" created="Sat, 23 Sep 2023 16:01:26 GMT"/>
							<outline text="}" created="Sat, 23 Sep 2023 16:01:29 GMT"/>
							</outline>
						<outline text="}" created="Sat, 10 Jun 2023 14:15:06 GMT"/>
						</outline>
					<outline text="function getUsersText () {" isComment="true" created="Sun, 08 Jun 2014 12:44:27 GMT" pgfnum="41997">
						<outline text="if (appPrefs.savedText === undefined) {" created="Wed, 14 Jun 2023 16:16:25 GMT">
							<outline text="return (&quot;&quot;);" created="Wed, 14 Jun 2023 16:16:31 GMT"/>
							<outline text="}" created="Wed, 14 Jun 2023 16:16:34 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 14 Jun 2023 16:16:34 GMT">
							<outline text="return (decodeURIComponent (appPrefs.savedText));" created="Sun, 08 Jun 2014 12:44:42 GMT" pgfnum="41999"/>
							<outline text="}" created="Wed, 14 Jun 2023 16:16:36 GMT"/>
							</outline>
						<outline text="}" created="Sun, 08 Jun 2014 12:44:34 GMT" pgfnum="41998"/>
						</outline>
					<outline text="function getPrefixString (num, totalTweets) {" isComment="true" created="Sun, 08 Jun 2014 14:56:59 GMT" pgfnum="42029">
						<outline text="if (appPrefs.flIncludePrefix) {" created="Sun, 24 Sep 2023 16:21:27 GMT">
							<outline text="var totalString = &quot;&quot;;" created="Tue, 17 Jun 2014 22:30:04 GMT" pgfnum="42163"/>
							<outline text="if (appPrefs.flIncludeTotalTweets &amp;&amp; (totalTweets &gt; 0)) {" created="Tue, 17 Jun 2014 22:29:42 GMT" pgfnum="42159">
								<outline text="totalString = totalTweets.toString () + &quot; &quot;;" created="Tue, 17 Jun 2014 22:30:48 GMT" pgfnum="42165"/>
								<outline text="}" created="Tue, 17 Jun 2014 22:30:25 GMT" pgfnum="42164"/>
								</outline>
							<outline text="return (num + appPrefs.stringAfterNumber + totalString);" created="Sun, 08 Jun 2014 14:57:21 GMT" pgfnum="42031"/>
							<outline text="}" created="Sun, 24 Sep 2023 16:21:32 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 24 Sep 2023 16:21:33 GMT">
							<outline text="return (&quot;&quot;);" created="Sun, 24 Sep 2023 16:21:50 GMT"/>
							<outline text="}" created="Sun, 24 Sep 2023 16:21:35 GMT"/>
							</outline>
						<outline text="}" created="Sun, 08 Jun 2014 14:57:09 GMT" pgfnum="42030"/>
						</outline>
					<outline text="function wordLength (word) { //7/15/14 by DW" isComment="true">
						<outline text="var splitUrl = urlSplitter (word);"/>
						<outline text="if ((splitUrl.host != undefined) &amp;&amp; (splitUrl.path != undefined)) {">
							<outline text="var flHasDot = false;"/>
							<outline text="for (var i = 0; i &lt; splitUrl.host.length; i++) {">
								<outline text="if (splitUrl.host [i] == &quot;.&quot;) {">
									<outline text="flHasDot = true;"/>
									<outline text="break;"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="if (flHasDot) {">
								<outline text="return (twGetUrlLength ()); //3/13/17 by DW"/>
								<outline text="" isComment="true"/>
								<outline text="var twUrlLength = 23;" isComment="true" created="Tue, 15 Jul 2014 14:14:15 GMT" pgfnum="42986"/>
								<outline text="if (twitterConfig != undefined) {" isComment="true" created="Tue, 15 Jul 2014 14:14:15 GMT" pgfnum="42987">
									<outline text="twUrlLength = twitterConfig.short_url_length_https;" created="Tue, 15 Jul 2014 14:14:44 GMT" pgfnum="42993"/>
									<outline text="}" created="Tue, 15 Jul 2014 14:14:22 GMT" pgfnum="42990"/>
									</outline>
								<outline text="return (twUrlLength);" isComment="true"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="return (word.length);"/>
						<outline text="}"/>
						</outline>
					<outline text="" isComment="true" created="Tue, 28 Jan 2025 16:43:31 GMT"/>
					<outline text="function splitIntoTweetArray (s) {" isComment="true">
						<outline text="Changes" isComment="true" created="Tue, 08 Jul 2014 14:10:12 GMT" pgfnum="42728">
							<outline text="7/15/14; 9:51:25 AM by DW" created="Tue, 15 Jul 2014 13:51:25 GMT" pgfnum="42984">
								<outline text="When computing the length of a word, use wordLength routine, instead of w.length." created="Tue, 15 Jul 2014 13:51:26 GMT" pgfnum="42985"/>
								</outline>
							<outline text="7/8/14; 10:10:14 AM by DW" created="Tue, 08 Jul 2014 14:10:14 GMT" pgfnum="42729">
								<outline text="Do the split twice, if the pref is set to include the count, to be sure the count of tweets is correct. " created="Tue, 08 Jul 2014 14:10:15 GMT" pgfnum="42730"/>
								</outline>
							</outline>
						<outline text="function splitForDave (s) {" created="Sun, 24 Sep 2023 17:46:54 GMT">
							<outline text="console.log (&quot;splitForDave&quot;);" created="Sun, 24 Sep 2023 17:55:52 GMT"/>
							<outline text="function doSplit () {" created="Tue, 08 Jul 2014 14:09:54 GMT" pgfnum="42726">
								<outline text="var pgfs = removeMultipleBlanks (s).split (&quot;\n&quot;), totalTweets, nextPrefix, hashtag, tagLength, nextTweet = &quot;&quot;;"/>
								<outline text="" created="Sat, 23 Sep 2023 16:20:44 GMT"/>
								<outline text="pgfs.forEach (function (item, ix) {" isComment="true" created="Sat, 23 Sep 2023 16:10:05 GMT">
									<outline text="if (beginsWith (item, &quot;\\-&quot;)) {" created="Sat, 23 Sep 2023 16:13:14 GMT">
										<outline text="var ixprev = ix -1;" created="Sat, 23 Sep 2023 16:16:45 GMT"/>
										<outline text="if (pgfs [ixprev].length == 0) {" created="Sat, 23 Sep 2023 16:17:00 GMT">
											<outline text="delete pgfs [ixprev];" created="Sat, 23 Sep 2023 16:18:00 GMT"/>
											<outline text="pgfs [ixprev - 1] += &quot;\n&quot; + stringDelete (item, 1, 2);" created="Sat, 23 Sep 2023 16:18:41 GMT"/>
											<outline text="delete pgfs [ix];" created="Sat, 23 Sep 2023 16:18:00 GMT"/>
											<outline text="}" created="Sat, 23 Sep 2023 16:17:31 GMT"/>
											</outline>
										<outline text="console.log (stringUpper (item));" created="Sat, 23 Sep 2023 16:11:32 GMT"/>
										<outline text="}" created="Sat, 23 Sep 2023 16:13:31 GMT"/>
										</outline>
									<outline text="else {" created="Sat, 23 Sep 2023 16:14:16 GMT">
										<outline text="console.log (item);" created="Sat, 23 Sep 2023 16:11:32 GMT"/>
										<outline text="}" created="Sat, 23 Sep 2023 16:14:18 GMT"/>
										</outline>
									<outline text="});" created="Sat, 23 Sep 2023 16:11:27 GMT"/>
									</outline>
								<outline text="" created="Tue, 17 Jun 2014 22:34:03 GMT" pgfnum="42166"/>
								<outline text="//set totalTweets, nextPrefix -- 6/17/14 by DW" created="Tue, 17 Jun 2014 22:34:03 GMT" pgfnum="42167">
									<outline text="if (tweetArray == undefined) {" created="Tue, 17 Jun 2014 22:34:22 GMT" pgfnum="42173">
										<outline text="totalTweets = 0;" created="Tue, 17 Jun 2014 22:34:59 GMT" pgfnum="42177"/>
										<outline text="}" created="Tue, 17 Jun 2014 22:34:33 GMT" pgfnum="42174"/>
										</outline>
									<outline text="else {" created="Tue, 17 Jun 2014 22:34:49 GMT" pgfnum="42175">
										<outline text="totalTweets = tweetArray.length;" created="Tue, 17 Jun 2014 22:34:12 GMT" pgfnum="42172"/>
										<outline text="}" created="Tue, 17 Jun 2014 22:34:52 GMT" pgfnum="42176"/>
										</outline>
									<outline text="nextPrefix = getPrefixString (1, totalTweets);"/>
									</outline>
								<outline text="" created="Tue, 17 Jun 2014 22:34:04 GMT" pgfnum="42171"/>
								<outline text="tweetArray = new Array ();"/>
								<outline text="//set hashtag, tagLength -- 6/15/14 by DW" created="Sun, 15 Jun 2014 22:42:44 GMT" pgfnum="42138">
									<outline text="hashtag = trimWhitespace (appPrefs.hashTag);" created="Sun, 15 Jun 2014 22:45:38 GMT" pgfnum="42149"/>
									<outline text="if (hashtag.length == 0) {" created="Sun, 15 Jun 2014 22:42:48 GMT" pgfnum="42139">
										<outline text="hashtag = &quot;&quot;;" created="Sun, 15 Jun 2014 22:45:13 GMT" pgfnum="42148"/>
										<outline text="tagLength = 0;" created="Sun, 15 Jun 2014 22:43:41 GMT" pgfnum="42143"/>
										<outline text="}" created="Sun, 15 Jun 2014 22:43:31 GMT" pgfnum="42140"/>
										</outline>
									<outline text="else {" created="Sun, 15 Jun 2014 22:43:32 GMT" pgfnum="42141">
										<outline text="if (!beginsWith (hashtag, &quot;#&quot;)) {" created="Sun, 15 Jun 2014 22:45:43 GMT" pgfnum="42150">
											<outline text="hashtag = &quot;#&quot; + hashtag;" created="Sun, 15 Jun 2014 22:46:08 GMT" pgfnum="42152"/>
											<outline text="}" created="Sun, 15 Jun 2014 22:45:55 GMT" pgfnum="42151"/>
											</outline>
										<outline text="hashtag = &quot; &quot; + hashtag;"/>
										<outline text="tagLength = hashtag.length;" created="Sun, 15 Jun 2014 22:47:01 GMT" pgfnum="42153"/>
										<outline text="}" created="Sun, 15 Jun 2014 22:43:36 GMT" pgfnum="42142"/>
										</outline>
									</outline>
								<outline text="function newTweet () {">
									<outline text="var obj = new Object ();" created="Sun, 08 Jun 2014 11:37:16 GMT" pgfnum="41925"/>
									<outline text="obj.text = nextPrefix + nextTweet + hashtag;" created="Sun, 08 Jun 2014 11:37:23 GMT" pgfnum="41929"/>
									<outline text="tweetArray [tweetArray.length] = obj;" created="Sun, 08 Jun 2014 11:37:16 GMT" pgfnum="41926"/>
									<outline text="nextPrefix = getPrefixString (tweetArray.length + 1, totalTweets);"/>
									<outline text="nextTweet = &quot;&quot;;"/>
									<outline text="}"/>
									</outline>
								<outline text="for (var ixpgf = 0; ixpgf &lt; pgfs.length; ixpgf++) {">
									<outline text="var pgf = pgfs [ixpgf], words = pgf.split (&quot; &quot;);"/>
									<outline text="for (ixword = 0; ixword &lt; words.length; ixword++) {">
										<outline text="var w = words [ixword];"/>
										<outline text="var blankLength = (nextTweet.length &gt; 0) ? 1 : 0;"/>
										<outline text="if ((wordLength (w) + nextTweet.length + nextPrefix.length + blankLength + tagLength) &gt; appPrefs.maxPostLength) {">
											<outline text="newTweet ();"/>
											<outline text="" created="Sun, 08 Jun 2014 00:26:41 GMT" pgfnum="41864"/>
											<outline text="//protect against weirdly-long words -- 6/7/14 by DW" created="Sun, 08 Jun 2014 00:32:22 GMT" pgfnum="41875">
												<outline text="var maxwordlength = appPrefs.maxPostLength - nextPrefix.length;" created="Sun, 08 Jun 2014 00:30:14 GMT" pgfnum="41872"/>
												<outline text="while (w.length &gt; maxwordlength) {" created="Sun, 08 Jun 2014 00:32:22 GMT" pgfnum="41876">
													<outline text="nextTweet = w.substr (0, maxwordlength);" created="Sun, 08 Jun 2014 00:28:43 GMT" pgfnum="41871"/>
													<outline text="w = w.substr (maxwordlength);" created="Sun, 08 Jun 2014 00:31:13 GMT" pgfnum="41874"/>
													<outline text="newTweet ();"/>
													<outline text="}" created="Sun, 08 Jun 2014 00:32:27 GMT" pgfnum="41879"/>
													</outline>
												</outline>
											<outline text="" created="Sun, 08 Jun 2014 00:26:42 GMT" pgfnum="41869"/>
											<outline text="nextTweet = w;"/>
											<outline text="}"/>
											</outline>
										<outline text="else {">
											<outline text="if (nextTweet.length &gt; 0) {">
												<outline text="nextTweet += &quot; &quot;;"/>
												<outline text="}"/>
												</outline>
											<outline text="nextTweet += w;"/>
											<outline text="}"/>
											</outline>
										<outline text="}"/>
										</outline>
									<outline text="if (nextTweet.length &gt; 0) {">
										<outline text="newTweet ();"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="}" created="Tue, 08 Jul 2014 14:10:00 GMT" pgfnum="42727"/>
								</outline>
							<outline text="doSplit ();" created="Tue, 08 Jul 2014 14:11:15 GMT" pgfnum="42732"/>
							<outline text="if (appPrefs.flIncludeTotalTweets) { " created="Tue, 08 Jul 2014 14:11:31 GMT" pgfnum="42734">
								<outline text="doSplit ();" created="Tue, 08 Jul 2014 14:11:15 GMT" pgfnum="42732"/>
								<outline text="}" created="Tue, 08 Jul 2014 14:11:40 GMT" pgfnum="42735"/>
								</outline>
							<outline text="}" created="Sun, 24 Sep 2023 17:47:12 GMT"/>
							</outline>
						<outline text="if (isDave ()) {" created="Sun, 24 Sep 2023 17:47:18 GMT">
							<outline text="splitForDave (s);" created="Sun, 24 Sep 2023 17:47:37 GMT"/>
							<outline text="}" created="Sun, 24 Sep 2023 17:47:24 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 24 Sep 2023 17:47:25 GMT">
							<outline text="function doSplit () {" created="Tue, 08 Jul 2014 14:09:54 GMT" pgfnum="42726">
								<outline text="var pgfs = removeMultipleBlanks (s).split (&quot;\n&quot;), totalTweets, nextPrefix, hashtag, tagLength, nextTweet = &quot;&quot;;"/>
								<outline text="" created="Sat, 23 Sep 2023 16:10:05 GMT"/>
								<outline text="console.log (&quot;splitIntoTweetArray&quot;);" created="Sat, 23 Sep 2023 16:20:35 GMT"/>
								<outline text="" created="Sat, 23 Sep 2023 16:20:44 GMT"/>
								<outline text="pgfs.forEach (function (item, ix) {" isComment="true" created="Sat, 23 Sep 2023 16:10:05 GMT">
									<outline text="if (beginsWith (item, &quot;\\-&quot;)) {" created="Sat, 23 Sep 2023 16:13:14 GMT">
										<outline text="var ixprev = ix -1;" created="Sat, 23 Sep 2023 16:16:45 GMT"/>
										<outline text="if (pgfs [ixprev].length == 0) {" created="Sat, 23 Sep 2023 16:17:00 GMT">
											<outline text="delete pgfs [ixprev];" created="Sat, 23 Sep 2023 16:18:00 GMT"/>
											<outline text="pgfs [ixprev - 1] += &quot;\n&quot; + stringDelete (item, 1, 2);" created="Sat, 23 Sep 2023 16:18:41 GMT"/>
											<outline text="delete pgfs [ix];" created="Sat, 23 Sep 2023 16:18:00 GMT"/>
											<outline text="}" created="Sat, 23 Sep 2023 16:17:31 GMT"/>
											</outline>
										<outline text="console.log (stringUpper (item));" created="Sat, 23 Sep 2023 16:11:32 GMT"/>
										<outline text="}" created="Sat, 23 Sep 2023 16:13:31 GMT"/>
										</outline>
									<outline text="else {" created="Sat, 23 Sep 2023 16:14:16 GMT">
										<outline text="console.log (item);" created="Sat, 23 Sep 2023 16:11:32 GMT"/>
										<outline text="}" created="Sat, 23 Sep 2023 16:14:18 GMT"/>
										</outline>
									<outline text="});" created="Sat, 23 Sep 2023 16:11:27 GMT"/>
									</outline>
								<outline text="" created="Tue, 17 Jun 2014 22:34:03 GMT" pgfnum="42166"/>
								<outline text="//set totalTweets, nextPrefix -- 6/17/14 by DW" created="Tue, 17 Jun 2014 22:34:03 GMT" pgfnum="42167">
									<outline text="if (tweetArray == undefined) {" created="Tue, 17 Jun 2014 22:34:22 GMT" pgfnum="42173">
										<outline text="totalTweets = 0;" created="Tue, 17 Jun 2014 22:34:59 GMT" pgfnum="42177"/>
										<outline text="}" created="Tue, 17 Jun 2014 22:34:33 GMT" pgfnum="42174"/>
										</outline>
									<outline text="else {" created="Tue, 17 Jun 2014 22:34:49 GMT" pgfnum="42175">
										<outline text="totalTweets = tweetArray.length;" created="Tue, 17 Jun 2014 22:34:12 GMT" pgfnum="42172"/>
										<outline text="}" created="Tue, 17 Jun 2014 22:34:52 GMT" pgfnum="42176"/>
										</outline>
									<outline text="nextPrefix = getPrefixString (1, totalTweets);"/>
									</outline>
								<outline text="" created="Tue, 17 Jun 2014 22:34:04 GMT" pgfnum="42171"/>
								<outline text="tweetArray = new Array ();"/>
								<outline text="//set hashtag, tagLength -- 6/15/14 by DW" created="Sun, 15 Jun 2014 22:42:44 GMT" pgfnum="42138">
									<outline text="hashtag = trimWhitespace (appPrefs.hashTag);" created="Sun, 15 Jun 2014 22:45:38 GMT" pgfnum="42149"/>
									<outline text="if (hashtag.length == 0) {" created="Sun, 15 Jun 2014 22:42:48 GMT" pgfnum="42139">
										<outline text="hashtag = &quot;&quot;;" created="Sun, 15 Jun 2014 22:45:13 GMT" pgfnum="42148"/>
										<outline text="tagLength = 0;" created="Sun, 15 Jun 2014 22:43:41 GMT" pgfnum="42143"/>
										<outline text="}" created="Sun, 15 Jun 2014 22:43:31 GMT" pgfnum="42140"/>
										</outline>
									<outline text="else {" created="Sun, 15 Jun 2014 22:43:32 GMT" pgfnum="42141">
										<outline text="if (!beginsWith (hashtag, &quot;#&quot;)) {" created="Sun, 15 Jun 2014 22:45:43 GMT" pgfnum="42150">
											<outline text="hashtag = &quot;#&quot; + hashtag;" created="Sun, 15 Jun 2014 22:46:08 GMT" pgfnum="42152"/>
											<outline text="}" created="Sun, 15 Jun 2014 22:45:55 GMT" pgfnum="42151"/>
											</outline>
										<outline text="hashtag = &quot; &quot; + hashtag;"/>
										<outline text="tagLength = hashtag.length;" created="Sun, 15 Jun 2014 22:47:01 GMT" pgfnum="42153"/>
										<outline text="}" created="Sun, 15 Jun 2014 22:43:36 GMT" pgfnum="42142"/>
										</outline>
									</outline>
								<outline text="function newTweet () {">
									<outline text="var obj = new Object ();" created="Sun, 08 Jun 2014 11:37:16 GMT" pgfnum="41925"/>
									<outline text="obj.text = nextPrefix + nextTweet + hashtag;" created="Sun, 08 Jun 2014 11:37:23 GMT" pgfnum="41929"/>
									<outline text="tweetArray [tweetArray.length] = obj;" created="Sun, 08 Jun 2014 11:37:16 GMT" pgfnum="41926"/>
									<outline text="nextPrefix = getPrefixString (tweetArray.length + 1, totalTweets);"/>
									<outline text="nextTweet = &quot;&quot;;"/>
									<outline text="}"/>
									</outline>
								<outline text="for (var ixpgf = 0; ixpgf &lt; pgfs.length; ixpgf++) {">
									<outline text="var pgf = pgfs [ixpgf], words = pgf.split (&quot; &quot;);"/>
									<outline text="for (ixword = 0; ixword &lt; words.length; ixword++) {">
										<outline text="var w = words [ixword];"/>
										<outline text="var blankLength = (nextTweet.length &gt; 0) ? 1 : 0;"/>
										<outline text="if ((wordLength (w) + nextTweet.length + nextPrefix.length + blankLength + tagLength) &gt; appPrefs.maxPostLength) {">
											<outline text="newTweet ();"/>
											<outline text="" created="Sun, 08 Jun 2014 00:26:41 GMT" pgfnum="41864"/>
											<outline text="//protect against weirdly-long words -- 6/7/14 by DW" created="Sun, 08 Jun 2014 00:32:22 GMT" pgfnum="41875">
												<outline text="var maxwordlength = appPrefs.maxPostLength - nextPrefix.length;" created="Sun, 08 Jun 2014 00:30:14 GMT" pgfnum="41872"/>
												<outline text="while (w.length &gt; maxwordlength) {" created="Sun, 08 Jun 2014 00:32:22 GMT" pgfnum="41876">
													<outline text="nextTweet = w.substr (0, maxwordlength);" created="Sun, 08 Jun 2014 00:28:43 GMT" pgfnum="41871"/>
													<outline text="w = w.substr (maxwordlength);" created="Sun, 08 Jun 2014 00:31:13 GMT" pgfnum="41874"/>
													<outline text="newTweet ();"/>
													<outline text="}" created="Sun, 08 Jun 2014 00:32:27 GMT" pgfnum="41879"/>
													</outline>
												</outline>
											<outline text="" created="Sun, 08 Jun 2014 00:26:42 GMT" pgfnum="41869"/>
											<outline text="nextTweet = w;"/>
											<outline text="}"/>
											</outline>
										<outline text="else {">
											<outline text="if (nextTweet.length &gt; 0) {">
												<outline text="nextTweet += &quot; &quot;;"/>
												<outline text="}"/>
												</outline>
											<outline text="nextTweet += w;"/>
											<outline text="}"/>
											</outline>
										<outline text="}"/>
										</outline>
									<outline text="if (nextTweet.length &gt; 0) {">
										<outline text="newTweet ();"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="}" created="Tue, 08 Jul 2014 14:10:00 GMT" pgfnum="42727"/>
								</outline>
							<outline text="doSplit ();" created="Tue, 08 Jul 2014 14:11:15 GMT" pgfnum="42732"/>
							<outline text="if (appPrefs.flIncludeTotalTweets) { " created="Tue, 08 Jul 2014 14:11:31 GMT" pgfnum="42734">
								<outline text="doSplit ();" created="Tue, 08 Jul 2014 14:11:15 GMT" pgfnum="42732"/>
								<outline text="}" created="Tue, 08 Jul 2014 14:11:40 GMT" pgfnum="42735"/>
								</outline>
							<outline text="}" created="Sun, 24 Sep 2023 17:47:29 GMT"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function viewTweetArray (ixBoldItem) {" isComment="true">
						<outline text="var htmltext = &quot;&quot;;"/>
						<outline text="tweetArray.forEach (function (item, ix) {" created="Tue, 13 Jun 2023 14:00:05 GMT">
							<outline text="var theText = item.text;" created="Tue, 13 Jun 2023 14:00:45 GMT"/>
							<outline text="theText = replaceAll (theText, &quot;&lt;&quot;, &quot;&amp;lt;&quot;); " created="Sun, 08 Jun 2014 00:57:53 GMT" pgfnum="41883"/>
							<outline text="theText = replaceAll (theText, &quot;&amp;&amp;&quot;, &quot;&lt;br&gt;&quot;); //9/23/23 by DW" created="Sun, 08 Jun 2014 00:57:53 GMT" pgfnum="41883"/>
							<outline text="if (ixBoldItem !== undefined) {" created="Tue, 13 Jun 2023 14:22:07 GMT">
								<outline text="if (ix === ixBoldItem) {">
									<outline text="theText = &quot;&lt;b&gt;&quot; + theText + &quot;&lt;/b&gt;&quot;;"/>
									<outline text="}"/>
									</outline>
								<outline text="}" created="Tue, 13 Jun 2023 14:22:12 GMT"/>
								</outline>
							<outline text="htmltext += &quot;&lt;p&gt;&quot; + theText + &quot;&lt;/p&gt;&quot;;"/>
							<outline text="});" created="Tue, 13 Jun 2023 14:00:20 GMT"/>
							</outline>
						<outline text="$(&quot;#idTweetArray&quot;).html (htmltext);" created="Wed, 03 Apr 2013 16:41:18 GMT" pgfnum="1226"/>
						<outline text="}"/>
						</outline>
					<outline text="function recalcTweetArray (flMustRecalc=false) {" isComment="true">
						<outline text="const now = new Date ();" created="Tue, 28 Jan 2025 22:15:32 GMT"/>
						<outline text="var s = getUsersText ();"/>
						<outline text="if ((s != lastTextArrayContents) || flMustRecalc) {">
							<outline text="splitIntoTweetArray (s);"/>
							<outline text="viewTweetArray ();"/>
							<outline text="localStorage.lastTweetText = s;" isComment="true"/>
							<outline text="lastTextArrayContents = s;"/>
							<outline text="whenLastKeystroke = now;"/>
							<outline text="whenLastRecalc = now;" created="Tue, 28 Jan 2025 22:13:57 GMT"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="" isComment="true" created="Wed, 29 Jan 2025 15:57:26 GMT"/>
					<outline text="" isComment="true" created="Wed, 29 Jan 2025 15:57:26 GMT"/>
					<outline text="function serverpost (path, params, callback) {" isComment="true">
						<outline text="const url = appConsts.urlTextcastingServer + path;" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
						<outline text="for (var x in params) { //5/30/23 by DW -- work around bug in buildParamList" created="Tue, 30 May 2023 13:56:52 GMT">
							<outline text="if (params [x] === undefined) {" created="Tue, 30 May 2023 13:57:16 GMT">
								<outline text="delete params [x];" created="Tue, 30 May 2023 13:57:28 GMT"/>
								<outline text="}" created="Tue, 30 May 2023 13:57:33 GMT"/>
								</outline>
							<outline text="}" created="Tue, 30 May 2023 13:56:58 GMT"/>
							</outline>
						<outline text="const filedata = buildParamList (params, false);" created="Tue, 30 May 2023 13:31:41 GMT"/>
						<outline text="$.post (url, filedata, function (data, status) {" created="Sat, 09 Aug 2014 15:59:33 GMT" pgfnum="43210">
							<outline text="if (status == &quot;success&quot;) {" created="Sat, 09 Aug 2014 16:04:22 GMT" pgfnum="43217">
								<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
									<outline text="callback (undefined, data);" created="Sat, 09 Aug 2014 16:04:47 GMT" pgfnum="43222"/>
									<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
									</outline>
								<outline text="}" created="Sat, 09 Aug 2014 16:04:38 GMT" pgfnum="43219"/>
								</outline>
							<outline text="else {" created="Sat, 09 Aug 2014 16:04:39 GMT" pgfnum="43220">
								<outline text="var err = {">
									<outline text="code: status.status,"/>
									<outline text="message: JSON.parse (status.responseText).message"/>
									<outline text="};"/>
									</outline>
								<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
									<outline text="callback (err);"/>
									<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
									</outline>
								<outline text="}" created="Sat, 09 Aug 2014 16:04:41 GMT" pgfnum="43221"/>
								</outline>
							<outline text="});" created="Sat, 09 Aug 2014 16:00:26 GMT" pgfnum="43214"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function sendToBluesky (thePrefs, thePost, callback) {" isComment="true" created="Mon, 29 May 2023 17:00:39 GMT">
						<outline text="Changes" isComment="true" created="Sun, 11 Jun 2023 15:41:48 GMT">
							<outline text="7/5/23; 8:10:33 PM by DW" created="Thu, 06 Jul 2023 00:10:32 GMT">
								<outline text="Look for errors that aren't communication errors." created="Thu, 06 Jul 2023 00:10:33 GMT"/>
								</outline>
							<outline text="6/11/23; 11:41:50 AM by DW" created="Sun, 11 Jun 2023 15:41:49 GMT">
								<outline text="Cribbed from Marktwain. Need expedience here, if we later want generality, ie posting threads to many platforms, we'll need to get the more generalized code from MT. " created="Sun, 11 Jun 2023 15:41:50 GMT"/>
								</outline>
							</outline>
						<outline text="var reply = undefined;" created="Sun, 11 Jun 2023 20:24:46 GMT"/>
						<outline text="if ((thePost.root !== undefined) &amp;&amp; (thePost.parent !== undefined)) {" created="Sun, 11 Jun 2023 20:25:20 GMT">
							<outline text="reply = {" created="Sun, 11 Jun 2023 20:25:33 GMT">
								<outline text="root: thePost.root," created="Sun, 11 Jun 2023 20:26:04 GMT"/>
								<outline text="parent: thePost.parent" created="Sun, 11 Jun 2023 20:26:14 GMT"/>
								<outline text="}" created="Sun, 11 Jun 2023 20:25:46 GMT"/>
								</outline>
							<outline text="reply = jsonStringify (reply);" created="Sun, 11 Jun 2023 20:27:33 GMT"/>
							<outline text="}" created="Sun, 11 Jun 2023 20:25:29 GMT"/>
							</outline>
						<outline text="const params = {" created="Tue, 30 May 2023 13:07:30 GMT">
							<outline text="urlsite: thePrefs.siteurl,"/>
							<outline text="mailaddress: thePrefs.mailaddress,"/>
							<outline text="password: thePrefs.password,"/>
							<outline text="title: thePost.title,"/>
							<outline text="description: thePost.markdowntext,"/>
							<outline text="link: thePost.link, "/>
							<outline text="reply" created="Sun, 11 Jun 2023 19:59:43 GMT"/>
							<outline text="}" created="Tue, 30 May 2023 13:07:36 GMT"/>
							</outline>
						<outline text="console.log (&quot;sendToBluesky: params == &quot; + jsonStringify (params));" created="Sun, 11 Jun 2023 20:28:49 GMT"/>
						<outline text="" created="Thu, 06 Jul 2023 00:10:51 GMT"/>
						<outline text="serverpost (&quot;bluesky&quot;, params, function (err, data) {" created="Tue, 30 May 2023 13:13:48 GMT">
							<outline text="if (err) {" created="Thu, 06 Jul 2023 00:11:17 GMT">
								<outline text="callback (err);" created="Thu, 06 Jul 2023 00:11:19 GMT"/>
								<outline text="}" created="Thu, 06 Jul 2023 00:11:24 GMT"/>
								</outline>
							<outline text="else {" created="Thu, 06 Jul 2023 00:11:25 GMT">
								<outline text="if (data.error !== undefined) { //7/5/23 by DW" created="Thu, 06 Jul 2023 00:12:35 GMT">
									<outline text="const message = &quot;Couldn't send to Bluesky because: &quot; + data.message;" created="Thu, 06 Jul 2023 00:13:14 GMT"/>
									<outline text="callback ({message});" created="Thu, 06 Jul 2023 00:12:58 GMT"/>
									<outline text="}" created="Thu, 06 Jul 2023 00:12:42 GMT"/>
									</outline>
								<outline text="else {" created="Thu, 06 Jul 2023 00:12:43 GMT">
									<outline text="callback (undefined, data);" created="Thu, 06 Jul 2023 00:12:46 GMT"/>
									<outline text="}" created="Thu, 06 Jul 2023 00:12:45 GMT"/>
									</outline>
								<outline text="}" created="Thu, 06 Jul 2023 00:11:27 GMT"/>
								</outline>
							<outline text="});" created="Thu, 06 Jul 2023 00:11:09 GMT"/>
							</outline>
						<outline text="serverpost (&quot;bluesky&quot;, params, callback);" isComment="true" created="Tue, 30 May 2023 13:13:48 GMT"/>
						<outline text="" created="Wed, 14 Jun 2023 15:21:25 GMT"/>
						<outline text="appPrefs.ctTotalPosts++; //6/14/23 by DW"/>
						<outline text="appPrefs.whenLastPost = new Date ();" created="Wed, 14 Jun 2023 15:21:54 GMT"/>
						<outline text="prefsChanged ();" created="Wed, 14 Jun 2023 15:21:37 GMT"/>
						<outline text="}" created="Mon, 29 May 2023 17:00:55 GMT"/>
						</outline>
					<outline text="function getTweetableText (theText) { //9/23/23 by DW" isComment="true" created="Sat, 23 Sep 2023 16:40:59 GMT">
						<outline text="theText = replaceAll (theText, &quot;&amp;&amp;&quot;, &quot;\n&quot;);" created="Sun, 08 Jun 2014 00:57:53 GMT" pgfnum="41883"/>
						<outline text="return (theText);" created="Sat, 23 Sep 2023 16:41:33 GMT"/>
						<outline text="}" created="Sat, 23 Sep 2023 16:41:07 GMT"/>
						</outline>
					<outline text="function sendThreadPosts (callback) {" isComment="true" created="Sun, 11 Jun 2023 19:07:07 GMT">
						<outline text="Changes" isComment="true" created="Tue, 13 Jun 2023 15:29:09 GMT">
							<outline text="6/13/23; 11:29:11 AM by DW" created="Tue, 13 Jun 2023 15:29:10 GMT">
								<outline text="Add the ability to set the time between posts, makes it more complicated. Old code is below. " created="Tue, 13 Jun 2023 15:29:12 GMT">
									<outline text="function doNext (ix) {" isComment="true" created="Sun, 11 Jun 2023 19:33:04 GMT">
										<outline text="if (ix &lt; tweetArray.length) {" created="Sun, 11 Jun 2023 19:33:24 GMT">
											<outline text="const thePost = {" created="Sun, 11 Jun 2023 15:44:59 GMT">
												<outline text="markdowntext: tweetArray [ix].text," created="Sun, 11 Jun 2023 15:47:20 GMT"/>
												<outline text="root: idFirstPost, " created="Sun, 11 Jun 2023 19:40:52 GMT"/>
												<outline text="parent: idPrevPost" created="Sun, 11 Jun 2023 19:40:57 GMT"/>
												<outline text="}" created="Sun, 11 Jun 2023 15:46:55 GMT"/>
												</outline>
											<outline text="sendToBluesky (thePrefs.apps.bluesky, thePost, function (err, data) {" created="Sun, 11 Jun 2023 15:44:59 GMT">
												<outline text="if (err) {" created="Sun, 11 Jun 2023 15:45:13 GMT">
													<outline text="console.log (&quot;sendThreadPosts: err.message == &quot; + err.message);" created="Sun, 11 Jun 2023 15:45:17 GMT"/>
													<outline text="}" created="Sun, 11 Jun 2023 15:45:22 GMT"/>
													</outline>
												<outline text="else {" created="Sun, 11 Jun 2023 15:45:23 GMT">
													<outline text="console.log (&quot;sendThreadPosts: data == &quot; + jsonStringify (data));" created="Sun, 11 Jun 2023 15:45:25 GMT"/>
													<outline text="if (ix == 0) {" created="Sun, 11 Jun 2023 19:38:01 GMT">
														<outline text="idFirstPost = data;" created="Sun, 11 Jun 2023 19:38:08 GMT"/>
														<outline text="}" created="Sun, 11 Jun 2023 19:38:13 GMT"/>
														</outline>
													<outline text="idPrevPost = data; " created="Sun, 11 Jun 2023 19:37:47 GMT"/>
													<outline text="doNext (ix + 1);" created="Sun, 11 Jun 2023 19:36:43 GMT"/>
													<outline text="}" created="Sun, 11 Jun 2023 15:45:37 GMT"/>
													</outline>
												<outline text="});" created="Sun, 11 Jun 2023 15:45:09 GMT"/>
												</outline>
											<outline text="viewTweetArray (ix);"/>
											<outline text="}" created="Sun, 11 Jun 2023 19:34:58 GMT"/>
											</outline>
										<outline text="else {" created="Sun, 11 Jun 2023 19:35:00 GMT">
											<outline text="if (callback !== undefined) {" created="Sun, 11 Jun 2023 19:33:57 GMT">
												<outline text="callback ();" created="Sun, 11 Jun 2023 19:34:46 GMT"/>
												<outline text="}" created="Sun, 11 Jun 2023 19:34:50 GMT"/>
												</outline>
											<outline text="viewTweetArray (); //with nothing highlighted"/>
											<outline text="}" created="Sun, 11 Jun 2023 19:35:02 GMT"/>
											</outline>
										<outline text="}" created="Sun, 11 Jun 2023 19:33:11 GMT"/>
										</outline>
									<outline text="doNext (0);" isComment="true" created="Sun, 11 Jun 2023 19:33:12 GMT"/>
									</outline>
								</outline>
							</outline>
						<outline text="console.log (&quot;sendThreadPosts&quot;);" created="Wed, 29 Jan 2025 16:00:51 GMT"/>
						<outline text="var idFirstPost = undefined, idPrevPost = undefined;" created="Sun, 11 Jun 2023 19:38:21 GMT"/>
						<outline text="var ixNextPost = 0, theThread;" created="Tue, 13 Jun 2023 15:12:27 GMT"/>
						<outline text="function sendNext () {" created="Tue, 13 Jun 2023 15:12:47 GMT">
							<outline text="const ix = ixNextPost++;" created="Tue, 13 Jun 2023 15:21:18 GMT"/>
							<outline text="if (ix &lt; tweetArray.length) {" created="Sun, 11 Jun 2023 19:33:24 GMT">
								<outline text="const thePost = {" created="Sun, 11 Jun 2023 15:44:59 GMT">
									<outline text="markdowntext: getTweetableText (tweetArray [ix].text)," created="Sun, 11 Jun 2023 15:47:20 GMT"/>
									<outline text="root: idFirstPost, " created="Sun, 11 Jun 2023 19:40:52 GMT"/>
									<outline text="parent: idPrevPost" created="Sun, 11 Jun 2023 19:40:57 GMT"/>
									<outline text="}" created="Sun, 11 Jun 2023 15:46:55 GMT"/>
									</outline>
								<outline text="const prefs = {" created="Wed, 14 Jun 2023 20:59:41 GMT">
									<outline text="siteurl: appPrefs.blueskySiteurl," created="Wed, 14 Jun 2023 20:59:59 GMT"/>
									<outline text="mailaddress: appPrefs.blueskyMailaddress," created="Wed, 14 Jun 2023 21:00:04 GMT"/>
									<outline text="password: appPrefs.blueskyPassword" created="Wed, 14 Jun 2023 21:00:08 GMT"/>
									<outline text="};" created="Wed, 14 Jun 2023 20:59:44 GMT"/>
									</outline>
								<outline text="sendToBluesky (prefs, thePost, function (err, data) {" created="Sun, 11 Jun 2023 15:44:59 GMT">
									<outline text="if (err) {" created="Sun, 11 Jun 2023 15:45:13 GMT">
										<outline text="alertDialog (err.message);" created="Sun, 11 Jun 2023 15:45:17 GMT"/>
										<outline text="ixNextPost = tweetArray.length; //to terminate the sending" created="Thu, 06 Jul 2023 00:18:07 GMT"/>
										<outline text="}" created="Sun, 11 Jun 2023 15:45:22 GMT"/>
										</outline>
									<outline text="else {" created="Sun, 11 Jun 2023 15:45:23 GMT">
										<outline text="console.log (&quot;sendThreadPosts: data == &quot; + jsonStringify (data));" created="Sun, 11 Jun 2023 15:45:25 GMT"/>
										<outline text="if (ix == 0) {" created="Sun, 11 Jun 2023 19:38:01 GMT">
											<outline text="idFirstPost = data;" created="Sun, 11 Jun 2023 19:38:08 GMT"/>
											<outline text="}" created="Sun, 11 Jun 2023 19:38:13 GMT"/>
											</outline>
										<outline text="idPrevPost = data; " created="Sun, 11 Jun 2023 19:37:47 GMT"/>
										<outline text="}" created="Sun, 11 Jun 2023 15:45:37 GMT"/>
										</outline>
									<outline text="});" created="Sun, 11 Jun 2023 15:45:09 GMT"/>
									</outline>
								<outline text="viewTweetArray (ix);"/>
								<outline text="}" created="Sun, 11 Jun 2023 19:34:58 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 11 Jun 2023 19:35:00 GMT">
								<outline text="if (callback !== undefined) {" created="Sun, 11 Jun 2023 19:33:57 GMT">
									<outline text="callback ();" created="Sun, 11 Jun 2023 19:34:46 GMT"/>
									<outline text="}" created="Sun, 11 Jun 2023 19:34:50 GMT"/>
									</outline>
								<outline text="viewTweetArray (); //with nothing highlighted"/>
								<outline text="clearInterval (theThread); //we're done" created="Tue, 13 Jun 2023 15:14:09 GMT"/>
								<outline text="}" created="Sun, 11 Jun 2023 19:35:02 GMT"/>
								</outline>
							<outline text="}" created="Tue, 13 Jun 2023 15:12:57 GMT"/>
							</outline>
						<outline text="sendNext (); //send first post immediately" created="Tue, 13 Jun 2023 15:27:55 GMT"/>
						<outline text="if (tweetArray.length &gt; 1) {" created="Tue, 13 Jun 2023 15:30:30 GMT">
							<outline text="theThread = setInterval (sendNext, appPrefs.ctSecsBetwTweets * 1000); " created="Tue, 13 Jun 2023 15:14:34 GMT"/>
							<outline text="}" created="Tue, 13 Jun 2023 15:30:31 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 13 Jun 2023 15:42:58 GMT">
							<outline text="viewTweetArray (); //with nothing highlighted"/>
							<outline text="if (callback !== undefined) {" created="Sun, 11 Jun 2023 19:33:57 GMT">
								<outline text="callback ();" created="Sun, 11 Jun 2023 19:34:46 GMT"/>
								<outline text="}" created="Sun, 11 Jun 2023 19:34:50 GMT"/>
								</outline>
							<outline text="}" created="Tue, 13 Jun 2023 15:43:09 GMT"/>
							</outline>
						<outline text="}" created="Sun, 11 Jun 2023 19:07:14 GMT"/>
						</outline>
					<outline text="function postThreadCommand () {" isComment="true" created="Thu, 15 Jun 2023 18:04:59 GMT">
						<outline text="sendThreadPosts ();" created="Thu, 15 Jun 2023 18:05:09 GMT"/>
						<outline text="}" created="Thu, 15 Jun 2023 18:05:05 GMT"/>
						</outline>
					<outline text="" isComment="true" created="Fri, 21 Apr 2023 13:58:17 GMT"/>
					<outline text="function setPostButtonText () {" isComment="true">
						<outline text="var s, len = tweetArray.length;"/>
						<outline text="if (len == 0) {">
							<outline text="s = &quot;Nothing to post&quot;;"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="s = &quot;Publish &quot; + len + &quot; post&quot;;"/>
							<outline text="if (len &gt; 1) {">
								<outline text="s += &quot;s&quot;;"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="const obj = $(&quot;#idTweetButton&quot;);" created="Tue, 13 Jun 2023 14:40:35 GMT"/>
						<outline text="setObjectHtml (obj, s);" created="Fri, 09 Jun 2023 15:25:10 GMT"/>
						<outline text="setObjectVisibility (obj, &quot;visible&quot;);" created="Tue, 13 Jun 2023 14:40:44 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="function setScreenname () {" isComment="true">
						<outline text="const name = (theFeedland.userIsSignedOn ()) ? theFeedland.getUserScreenname () : &quot;&quot;;" isComment="true"/>
						<outline text="setObjectHtml ($(&quot;.divScreenName&quot;), appPrefs.blueskyMailaddress);" isComment="true" created="Fri, 09 Jun 2023 15:25:10 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="function updateControlBox () {" isComment="true" created="Tue, 13 Jun 2023 14:30:05 GMT">
						<outline text="setFeedLink (); //7/5/23 by DW" isComment="true" created="Wed, 05 Jul 2023 15:37:33 GMT"/>
						<outline text="setPostButtonText ();"/>
						<outline text="setScreenname ();" created="Fri, 09 Jun 2023 15:29:18 GMT"/>
						<outline text="updateToggleConnectButton ();" isComment="true"/>
						<outline text="$(&quot;#idLeadingQuestion&quot;).text (appPrefs.leadingQuestion);" created="Thu, 15 Jun 2023 17:22:19 GMT"/>
						<outline text="}" created="Tue, 13 Jun 2023 14:30:11 GMT"/>
						</outline>
					<outline text="function startEditor () {" isComment="true" created="Fri, 09 Jun 2023 15:40:36 GMT">
						<outline text="console.log (&quot;startEditor&quot;);" created="Fri, 09 Jun 2023 16:21:41 GMT"/>
						<outline text="theEditor = new MediumEditor (&quot;.divBodyEditor&quot;, {">
							<outline text="autoLink: true, //12/19/24 by DW" isComment="true" created="Thu, 19 Dec 2024 14:53:02 GMT"/>
							<outline text="toolbar: {">
								<outline text="buttons: appConsts.defaultEditorButtons"/>
								<outline text="buttons: ['bold', 'italic', 'underline', 'anchor']" isComment="true"/>
								<outline text="},"/>
								</outline>
							<outline text="paste: {">
								<outline text="forcePlainText: false,"/>
								<outline text="cleanPastedHTML: true,"/>
								<outline text="cleanReplacements: [],"/>
								<outline text="cleanAttrs: [&quot;class&quot;, &quot;style&quot;, &quot;dir&quot;],"/>
								<outline text="unwrapTags: []"/>
								<outline text="},"/>
								</outline>
							<outline text="buttonLabels: &quot;fontawesome&quot;"/>
							<outline text="});"/>
							</outline>
						<outline text="theEditor = new MediumEditor (&quot;.divBodyEditor&quot;, {" isComment="true">
							<outline text="toolbar: {">
								<outline text="buttons: appConsts.defaultEditorButtons,"/>
								<outline text="buttonLabels: &quot;fontawesome&quot;,"/>
								<outline text="static: true,"/>
								<outline text="sticky: true"/>
								<outline text="}" created="Fri, 09 Jun 2023 19:34:44 GMT"/>
								</outline>
							<outline text="});" created="Fri, 09 Jun 2023 19:34:49 GMT"/>
							</outline>
						<outline text="" created="Tue, 28 Jan 2025 21:08:40 GMT"/>
						<outline text="const divBodyEditor = $(&quot;.divBodyEditor&quot;);" created="Tue, 28 Jan 2025 21:08:40 GMT"/>
						<outline text="divBodyEditor.attr (&quot;data-placeholder&quot;, appPrefs.editorPlaceholderText);" created="Sat, 10 Jun 2023 14:58:41 GMT"/>
						<outline text="if (appPrefs.savedText !== undefined) {" created="Fri, 09 Jun 2023 19:21:46 GMT">
							<outline text="theEditor.setContent (markdownToHtml (decodeURIComponent (appPrefs.savedText)));" created="Fri, 09 Jun 2023 19:21:49 GMT"/>
							<outline text="}" created="Fri, 09 Jun 2023 19:22:02 GMT"/>
							</outline>
						<outline text="theEditor.subscribe (&quot;editableInput&quot;, function (event, theMediumObject) {">
							<outline text="const mdtext = htmlToMarkdown (theMediumObject.innerHTML);" created="Sat, 10 Jun 2023 13:58:35 GMT"/>
							<outline text="appPrefs.savedText = mdtext;" created="Fri, 09 Jun 2023 19:18:04 GMT"/>
							<outline text="appPrefs.savedText = encodeURIComponent (mdtext);" isComment="true" created="Fri, 09 Jun 2023 19:18:04 GMT"/>
							<outline text="prefsChanged ();" created="Fri, 09 Jun 2023 19:18:28 GMT"/>
							<outline text="console.log (mdtext);" isComment="true"/>
							<outline text="});"/>
							</outline>
						<outline text="divBodyEditor.keydown (function (ev) {">
							<outline text="whenLastKeystroke = new Date ();"/>
							<outline text="});"/>
							</outline>
						<outline text="}" created="Fri, 09 Jun 2023 15:40:43 GMT"/>
						</outline>
					<outline text="" isComment="true" created="Tue, 28 Jan 2025 16:50:38 GMT"/>
					<outline text="" isComment="true" created="Wed, 29 Jan 2025 13:50:48 GMT"/>
					<outline text="function startPrefsDialog (userOptions, callback) {" isComment="true" created="Wed, 29 Jan 2025 13:50:48 GMT">
						<outline text="console.log (&quot;startPrefsDialog&quot;);" created="Wed, 29 Jan 2025 13:53:42 GMT"/>
						<outline text="" created="Wed, 29 Jan 2025 13:53:47 GMT"/>
						<outline text="var options = {" created="Wed, 29 Jan 2025 13:52:11 GMT">
							<outline text="idPrefsDialog: &quot;idPrefsDialog&quot;," created="Wed, 29 Jan 2025 13:52:23 GMT"/>
							<outline text="idOkButton: &quot;idPrefsOkButton&quot;," created="Wed, 29 Jan 2025 14:08:04 GMT"/>
							<outline text="idCancelButton: &quot;idPrefsCancelButton&quot;," created="Wed, 29 Jan 2025 14:08:15 GMT"/>
							<outline text="whereToSave: appPrefs" created="Wed, 29 Jan 2025 14:18:37 GMT"/>
							<outline text="};" created="Wed, 29 Jan 2025 13:52:17 GMT"/>
							</outline>
						<outline text="mergeOptions (userOptions, options);" created="Wed, 29 Jan 2025 13:53:19 GMT"/>
						<outline text="" created="Wed, 29 Jan 2025 13:58:47 GMT"/>
						<outline text="const theDialog = $(&quot;#&quot; + options.idPrefsDialog);" created="Wed, 29 Jan 2025 14:06:58 GMT"/>
						<outline text="const okButton = $(&quot;#&quot; + options.idOkButton);" created="Wed, 29 Jan 2025 14:06:58 GMT"/>
						<outline text="const cancelButton = $(&quot;#&quot; + options.idCancelButton);" created="Wed, 29 Jan 2025 14:06:58 GMT"/>
						<outline text="" created="Wed, 29 Jan 2025 14:06:58 GMT"/>
						<outline text="function getValuesFromDialog () {" created="Wed, 29 Jan 2025 14:01:35 GMT">
							<outline text="const newValues = new Object ();" created="Wed, 29 Jan 2025 14:16:23 GMT"/>
							<outline text="var inputs = document.getElementById (options.idPrefsDialog).getElementsByTagName (&quot;input&quot;), i;" created="Fri, 04 Jan 2013 13:12:48 GMT" pgfnum="16622"/>
							<outline text="for (var i = 0; i &lt; inputs.length; i++) {">
								<outline text="if (inputs [i].type == &quot;checkbox&quot;) {" created="Fri, 11 Jan 2013 19:19:38 GMT" pgfnum="17047">
									<outline text="newValues [inputs [i].name] = inputs [i].checked;"/>
									<outline text="}" created="Fri, 11 Jan 2013 19:19:55 GMT" pgfnum="17050"/>
									</outline>
								<outline text="else {" created="Fri, 11 Jan 2013 19:19:56 GMT" pgfnum="17051">
									<outline text="newValues [inputs [i].name] = inputs [i].value;"/>
									<outline text="}" created="Fri, 11 Jan 2013 19:20:00 GMT" pgfnum="17052"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text=""/>
							<outline text="var textareas = document.getElementById (options.idPrefsDialog).getElementsByTagName (&quot;textarea&quot;), i;" created="Fri, 04 Jan 2013 13:12:48 GMT" pgfnum="16622"/>
							<outline text="for (var i = 0; i &lt; textareas.length; i++) {">
								<outline text="newValues [textareas [i].name] = textareas [i].value;"/>
								<outline text="}"/>
								</outline>
							<outline text="" created="Wed, 29 Jan 2025 14:17:02 GMT"/>
							<outline text="var flChanged = false;" created="Wed, 29 Jan 2025 14:20:08 GMT"/>
							<outline text="for (var x in newValues) {" created="Wed, 29 Jan 2025 14:18:54 GMT">
								<outline text="if (newValues [x] != options.whereToSave [x]) {" created="Wed, 29 Jan 2025 14:19:13 GMT">
									<outline text="options.whereToSave [x] = newValues [x];" created="Wed, 29 Jan 2025 14:19:49 GMT"/>
									<outline text="console.log (&quot;getValuesFromDialog: &quot; + x + &quot; changed to \&quot;&quot; + newValues [x] + &quot;\&quot;&quot;);" created="Wed, 29 Jan 2025 14:17:02 GMT"/>
									<outline text="flChanged = true;" created="Wed, 29 Jan 2025 14:19:56 GMT"/>
									<outline text="}" created="Wed, 29 Jan 2025 14:19:41 GMT"/>
									</outline>
								<outline text="}" created="Wed, 29 Jan 2025 14:19:12 GMT"/>
								</outline>
							<outline text="callback (flChanged);" created="Wed, 29 Jan 2025 14:23:19 GMT"/>
							<outline text="}" created="Wed, 29 Jan 2025 14:01:43 GMT"/>
							</outline>
						<outline text="function hideDialog () {" created="Wed, 29 Jan 2025 13:58:47 GMT">
							<outline text="theDialog.modal (&quot;hide&quot;); "/>
							<outline text="}" created="Wed, 29 Jan 2025 13:58:53 GMT"/>
							</outline>
						<outline text="" created="Wed, 29 Jan 2025 13:53:20 GMT"/>
						<outline text="okButton.click (function (ev) {" created="Wed, 29 Jan 2025 13:56:33 GMT">
							<outline text="console.log (&quot;ok&quot;);" created="Wed, 29 Jan 2025 13:57:24 GMT"/>
							<outline text="getValuesFromDialog ();" created="Wed, 29 Jan 2025 14:15:03 GMT"/>
							<outline text="hideDialog ();" created="Wed, 29 Jan 2025 13:59:15 GMT"/>
							<outline text="});" created="Wed, 29 Jan 2025 13:57:07 GMT"/>
							</outline>
						<outline text="cancelButton.click (function (ev) {" created="Wed, 29 Jan 2025 13:56:33 GMT">
							<outline text="console.log (&quot;cancel&quot;);" created="Wed, 29 Jan 2025 13:57:24 GMT"/>
							<outline text="hideDialog ();" created="Wed, 29 Jan 2025 13:59:15 GMT"/>
							<outline text="});" created="Wed, 29 Jan 2025 13:57:07 GMT"/>
							</outline>
						<outline text="theDialog.modal (&quot;show&quot;); "/>
						<outline text="}" created="Wed, 29 Jan 2025 13:50:56 GMT"/>
						</outline>
					<outline text="" isComment="true" created="Wed, 29 Jan 2025 13:50:48 GMT"/>
					<outline text="" isComment="true" created="Wed, 29 Jan 2025 13:50:48 GMT"/>
					<outline text="function settingsCommand () { //10/8/24 by DW" isComment="true">
						<outline text="console.log (&quot;settingsCommand&quot;); " created="Thu, 21 Sep 2023 19:36:50 GMT"/>
						<outline text="const options = {" created="Wed, 29 Jan 2025 14:24:02 GMT">
							<outline text="whereToSave: appPrefs" created="Wed, 29 Jan 2025 14:24:19 GMT"/>
							<outline text="};" created="Wed, 29 Jan 2025 14:24:06 GMT"/>
							</outline>
						<outline text="startPrefsDialog (options, function (flChanged) {">
							<outline text="if (flChanged) {" created="Wed, 29 Jan 2025 14:24:26 GMT">
								<outline text="prefsChanged ();" created="Wed, 29 Jan 2025 14:24:36 GMT"/>
								<outline text="}" created="Wed, 29 Jan 2025 14:24:30 GMT"/>
								</outline>
							<outline text="});" created="Wed, 29 Jan 2025 14:23:58 GMT"/>
							</outline>
						<outline text="prefsDialogShow (function () {" isComment="true">
							<outline text="savePrefsAndReload (); //11/1/24 by DW" isComment="true" created="Fri, 01 Nov 2024 15:13:13 GMT"/>
							<outline text="savePrefs (function (err) { //10/17/24 by DW" isComment="true" created="Thu, 17 Oct 2024 21:35:08 GMT">
								<outline text="if (err) {" created="Thu, 17 Oct 2024 21:35:22 GMT">
									<outline text="alertDialog (err.message);" created="Thu, 17 Oct 2024 21:35:25 GMT"/>
									<outline text="}" created="Thu, 17 Oct 2024 21:35:32 GMT"/>
									</outline>
								<outline text="else {" created="Thu, 17 Oct 2024 21:35:33 GMT">
									<outline text="location.reload ();" created="Thu, 17 Oct 2024 21:37:10 GMT"/>
									<outline text="}" created="Thu, 17 Oct 2024 21:35:34 GMT"/>
									</outline>
								<outline text="});" created="Thu, 17 Oct 2024 21:35:16 GMT"/>
								</outline>
							<outline text="prefsChanged ();" isComment="true" created="Tue, 08 Oct 2024 17:26:15 GMT"/>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function settingsCommand () {" isComment="true" created="Sat, 10 Jun 2023 15:49:49 GMT">
						<outline text="console.log (&quot;settingsCommand&quot;);" created="Sat, 10 Jun 2023 15:50:40 GMT"/>
						<outline text="if (theFeedland.userIsSignedOn ()) {" created="Wed, 05 Jul 2023 15:09:37 GMT">
							<outline text="theFeedland.getUserPrefs (function (err, thePrefs) {" created="Sun, 07 May 2023 15:50:39 GMT">
								<outline text="if (err) {" created="Wed, 05 Jul 2023 15:08:33 GMT">
									<outline text="alertDialog (err.message);" created="Wed, 05 Jul 2023 15:08:45 GMT"/>
									<outline text="}" created="Wed, 05 Jul 2023 15:08:36 GMT"/>
									</outline>
								<outline text="else {" created="Wed, 05 Jul 2023 15:08:37 GMT">
									<outline text="console.log (&quot;settingsCommand: thePrefs == &quot; + jsonStringify (thePrefs));" isComment="true" created="Mon, 28 Mar 2022 17:16:58 GMT"/>
									<outline text="if (thePrefs.apps.threadCenter === undefined) {" created="Sat, 10 Jun 2023 15:58:59 GMT">
										<outline text="const now = new Date ();" created="Sat, 10 Jun 2023 16:01:40 GMT"/>
										<outline text="thePrefs.apps.threadCenter = {" created="Sat, 10 Jun 2023 15:59:11 GMT">
											<outline text="whenStarted: now," created="Sat, 10 Jun 2023 15:59:17 GMT"/>
											<outline text="ctUpdates: 0," created="Sat, 10 Jun 2023 16:01:06 GMT"/>
											<outline text="whenUpdated: now" created="Sat, 10 Jun 2023 16:01:28 GMT"/>
											<outline text="}" created="Sat, 10 Jun 2023 15:59:28 GMT"/>
											</outline>
										<outline text="}" created="Sat, 10 Jun 2023 15:59:10 GMT"/>
										</outline>
									<outline text="for (var x in thePrefs.apps.threadCenter) {" created="Sat, 10 Jun 2023 16:16:12 GMT">
										<outline text="appPrefs [x] = thePrefs.apps.threadCenter [x];" created="Sat, 10 Jun 2023 16:16:42 GMT"/>
										<outline text="}" created="Sat, 10 Jun 2023 16:16:20 GMT"/>
										</outline>
									<outline text="" created="Thu, 15 Jun 2023 22:11:49 GMT"/>
									<outline text="if (thePrefs.myFeedTitle !== undefined) { //6/15/23 by DW" created="Thu, 15 Jun 2023 22:14:29 GMT">
										<outline text="appPrefs.myFeedTitle = thePrefs.myFeedTitle;" created="Thu, 15 Jun 2023 22:11:52 GMT"/>
										<outline text="}" created="Thu, 15 Jun 2023 22:14:40 GMT"/>
										</outline>
									<outline text="if (thePrefs.myFeedDescription !== undefined) {" created="Thu, 15 Jun 2023 22:15:08 GMT">
										<outline text="appPrefs.myFeedDescription = thePrefs.myFeedDescription;" created="Thu, 15 Jun 2023 22:11:52 GMT"/>
										<outline text="}" created="Thu, 15 Jun 2023 22:15:21 GMT"/>
										</outline>
									<outline text="" created="Sat, 10 Jun 2023 19:59:13 GMT"/>
									<outline text="theFeedland.prefsDialog (function () {">
										<outline text="appPrefs.whenUpdated = new Date ();" created="Sat, 10 Jun 2023 15:57:00 GMT"/>
										<outline text="appPrefs.ctUpdates++;" created="Sat, 10 Jun 2023 15:57:00 GMT"/>
										<outline text="" created="Sun, 11 Jun 2023 16:12:22 GMT"/>
										<outline text="if (thePrefs.apps.bluesky === undefined) {" created="Wed, 14 Jun 2023 13:34:56 GMT">
											<outline text="thePrefs.apps.bluesky = new Object ();" created="Wed, 14 Jun 2023 13:35:03 GMT"/>
											<outline text="}" created="Wed, 14 Jun 2023 13:35:08 GMT"/>
											</outline>
										<outline text="thePrefs.apps.bluesky.enabled = appPrefs.blueskyEnabled;" created="Sun, 11 Jun 2023 16:12:22 GMT"/>
										<outline text="thePrefs.apps.bluesky.siteurl = appPrefs.blueskySiteurl;" created="Sun, 11 Jun 2023 16:12:22 GMT"/>
										<outline text="thePrefs.apps.bluesky.mailaddress = appPrefs.blueskyMailaddress;" created="Sun, 11 Jun 2023 16:12:22 GMT"/>
										<outline text="thePrefs.apps.bluesky.password = appPrefs.blueskyPassword;" created="Sun, 11 Jun 2023 16:12:22 GMT"/>
										<outline text="" created="Thu, 15 Jun 2023 22:12:46 GMT"/>
										<outline text="thePrefs.myFeedTitle = appPrefs.myFeedTitle;" created="Thu, 15 Jun 2023 22:11:52 GMT"/>
										<outline text="thePrefs.myFeedDescription = appPrefs.myFeedDescription;" created="Thu, 15 Jun 2023 22:11:52 GMT"/>
										<outline text="" created="Sun, 11 Jun 2023 16:12:23 GMT"/>
										<outline text="for (var x in appPrefs) {" created="Sat, 10 Jun 2023 16:16:12 GMT">
											<outline text="thePrefs.apps.threadCenter [x] = appPrefs [x];" created="Sat, 10 Jun 2023 16:16:42 GMT"/>
											<outline text="}" created="Sat, 10 Jun 2023 16:16:20 GMT"/>
											</outline>
										<outline text="" created="Thu, 15 Jun 2023 22:13:18 GMT"/>
										<outline text="theFeedland.setUserPrefs (thePrefs, function (err, thePrefs) {" created="Mon, 28 Mar 2022 17:16:33 GMT">
											<outline text="if (err) {" created="Sat, 30 Jul 2022 14:50:40 GMT">
												<outline text="console.log (err.message);" created="Sat, 30 Jul 2022 14:50:43 GMT"/>
												<outline text="}" created="Sat, 30 Jul 2022 14:50:50 GMT"/>
												</outline>
											<outline text="else {" created="Sat, 30 Jul 2022 14:50:50 GMT">
												<outline text="console.log (&quot;settingsCommand: thePrefs == &quot; + jsonStringify (thePrefs));" created="Mon, 28 Mar 2022 17:16:58 GMT"/>
												<outline text="recalcTweetArray (true);"/>
												<outline text="}" created="Sat, 30 Jul 2022 14:50:52 GMT"/>
												</outline>
											<outline text="});" created="Mon, 28 Mar 2022 17:16:51 GMT"/>
											</outline>
										<outline text="});" created="Sun, 07 May 2023 15:52:42 GMT"/>
										</outline>
									<outline text="}" created="Wed, 05 Jul 2023 15:08:39 GMT"/>
									</outline>
								<outline text="});" created="Sun, 07 May 2023 15:50:54 GMT"/>
								</outline>
							<outline text="}" created="Wed, 05 Jul 2023 15:10:13 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 05 Jul 2023 15:10:14 GMT">
							<outline text="alertDialog (&quot;Can't edit settings because you are not signed on.&quot;);" created="Wed, 05 Jul 2023 15:10:33 GMT"/>
							<outline text="}" created="Wed, 05 Jul 2023 15:10:15 GMT"/>
							</outline>
						<outline text="}" created="Sat, 10 Jun 2023 15:49:56 GMT"/>
						</outline>
					<outline text="" isComment="true" created="Wed, 29 Jan 2025 13:50:32 GMT"/>
					<outline text="function everySecond () {" isComment="true" created="Sat, 21 Dec 2024 14:51:11 GMT">
						<outline text="const now = new Date ();" created="Tue, 28 Jan 2025 22:12:05 GMT"/>
						<outline text="if (secondsSince (whenLastKeystroke) &gt;= 0.5) { //don't interrupt while user is typing" created="Tue, 28 Jan 2025 22:12:05 GMT">
							<outline text="updateControlBox ();"/>
							<outline text="recalcTweetArray ();"/>
							<outline text="}" created="Tue, 28 Jan 2025 22:13:12 GMT"/>
							</outline>
						<outline text="if (flPrefsChanged) {" created="Tue, 28 Jan 2025 16:43:57 GMT">
							<outline text="flPrefsChanged = false;" created="Tue, 28 Jan 2025 16:43:59 GMT"/>
							<outline text="localStorage.appPrefsForThreadWriter = jsonStringify (appPrefs);" created="Tue, 28 Jan 2025 16:44:06 GMT"/>
							<outline text="console.log (&quot;everySecond: appPrefs saved to localStorage (&quot; + gigabyteString (localStorage.appPrefsForThreadWriter.length) + &quot;)&quot;);" isComment="true" created="Tue, 28 Jan 2025 16:58:08 GMT"/>
							<outline text="}" created="Tue, 28 Jan 2025 16:44:15 GMT"/>
							</outline>
						<outline text="}" created="Sat, 21 Dec 2024 14:51:22 GMT"/>
						</outline>
					<outline text="function startup () {" isComment="true">
						<outline text="function startPrefs () {" created="Tue, 28 Jan 2025 16:50:38 GMT">
							<outline text="const now = new Date ();" created="Tue, 28 Jan 2025 16:51:40 GMT"/>
							<outline text="if (localStorage.appPrefsForThreadWriter !== undefined) {" created="Tue, 28 Jan 2025 16:41:42 GMT">
								<outline text="const jstruct = getObjectFromJsontext (localStorage.appPrefsForThreadWriter);" created="Tue, 28 Jan 2025 16:41:54 GMT"/>
								<outline text="if (jstruct !== undefined) {" created="Tue, 28 Jan 2025 16:42:41 GMT">
									<outline text="for (var x in jstruct) {" created="Tue, 28 Jan 2025 16:42:56 GMT">
										<outline text="appPrefs [x] = jstruct [x];" created="Tue, 28 Jan 2025 16:43:03 GMT"/>
										<outline text="}" created="Tue, 28 Jan 2025 16:43:02 GMT"/>
										</outline>
									<outline text="}" created="Tue, 28 Jan 2025 16:42:51 GMT"/>
									</outline>
								<outline text="}" created="Tue, 28 Jan 2025 16:41:52 GMT"/>
								</outline>
							<outline text="appPrefs.ctStarts++;"/>
							<outline text="appPrefs.whenLastStart = now;" created="Tue, 28 Jan 2025 16:45:27 GMT"/>
							<outline text="appPrefs.whenFirstStart = (appPrefs.whenFirstStart === undefined) ? now : appPrefs.whenFirstStart;" created="Tue, 28 Jan 2025 16:45:41 GMT"/>
							<outline text="prefsChanged ();" created="Tue, 28 Jan 2025 16:46:31 GMT"/>
							<outline text="" created="Tue, 28 Jan 2025 16:53:33 GMT"/>
							<outline text="console.log (&quot;startPrefs: appPrefs == &quot; + jsonStringify (appPrefs));" created="Tue, 28 Jan 2025 16:53:34 GMT"/>
							<outline text="}" created="Tue, 28 Jan 2025 16:50:45 GMT"/>
							</outline>
						<outline text="console.log (&quot;startup&quot;);" created="Fri, 17 Feb 2023 15:43:38 GMT"/>
						<outline text="debugger;" isComment="true" created="Tue, 28 Jan 2025 16:47:21 GMT"/>
						<outline text="" created="Tue, 28 Jan 2025 16:41:39 GMT"/>
						<outline text="startPrefs ();"/>
						<outline text="updateControlBox ();"/>
						<outline text="startEditor ();"/>
						<outline text="recalcTweetArray ();" created="Tue, 28 Jan 2025 22:16:42 GMT"/>
						<outline text="" created="Tue, 28 Jan 2025 18:27:28 GMT"/>
						<outline text="self.setInterval (everySecond, 1000); " created="Sat, 21 Dec 2024 14:50:40 GMT"/>
						<outline text="" created="Sat, 21 Dec 2024 14:50:39 GMT"/>
						<outline text="" created="Fri, 21 Apr 2023 13:57:01 GMT"/>
						<outline text="theEditor = new MediumEditor (&quot;.divBodyEditor&quot;, {" isComment="true">
							<outline text="placeholder: {" isComment="true">
								<outline text="text: &quot; &quot; + appConsts.editorPlaceholderText"/>
								<outline text="},"/>
								</outline>
							<outline text="toolbar: {" isComment="true">
								<outline text="buttons: appConsts.defaultEditorButtons,"/>
								<outline text="},"/>
								</outline>
							<outline text="buttonLabels: &quot;fontawesome&quot;," isComment="true"/>
							<outline text="imageDragging: false, //10/18/16 by DW" isComment="true"/>
							<outline text="autoLink: true,"/>
							<outline text="handlePaste: function (pasteEvent, html, text) {">
								<outline text="console.log (&quot;hello world&quot;);" created="Fri, 20 Dec 2024 18:04:57 GMT"/>
								<outline text="}," created="Fri, 20 Dec 2024 18:04:52 GMT"/>
								</outline>
							<outline text="extensions: {" isComment="true">
								<outline text="markdown: new MeMarkdown (function (md) {">
									<outline text="markdowntext = md; " created="Thu, 05 May 2022 14:34:29 GMT"/>
									<outline text="console.log (&quot;markdown version: &quot; + md);"/>
									<outline text="})"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="" isComment="true" created="Fri, 20 Dec 2024 15:26:52 GMT"/>
						<outline text="$(&quot;.divBodyEditor&quot;).focus ();" isComment="true"/>
						<outline text="theEditor.subscribe ('initialized', function () {" isComment="true">
							<outline text="console.log (&quot;initialized&quot;);" created="Fri, 21 Apr 2023 14:15:27 GMT"/>
							<outline text="});"/>
							</outline>
						<outline text="" isComment="true" created="Sat, 21 Dec 2024 14:42:18 GMT"/>
						<outline text="hitCounter ();" isComment="true" created="Fri, 21 Apr 2023 14:15:08 GMT"/>
						<outline text="" created="Sat, 21 Dec 2024 14:42:28 GMT"/>
						<outline text="$(&quot;.divBodyEditor&quot;).on (&quot;paste&quot;, function (event) {" isComment="true">
							<outline text="console.log (&quot;paste event&quot;);" created="Fri, 20 Dec 2024 15:20:30 GMT"/>
							<outline text="var clipboardData = event.originalEvent.clipboardData || window.clipboardData;"/>
							<outline text="var pastedText = clipboardData.getData(&quot;text/plain&quot;);"/>
							<outline text="console.log (pastedText);" created="Fri, 20 Dec 2024 15:20:30 GMT"/>
							<outline text="if (pastedText === &quot;specialCondition&quot;) {">
								<outline text="document.execCommand (&quot;insertText&quot;, false, &quot;Custom Pasted Content&quot;);"/>
								<outline text="event.preventDefault ();"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="" created="Fri, 20 Dec 2024 14:57:38 GMT"/>
						<outline text="console.log (&quot;Element count:&quot;, $(&quot;.divBodyEditor&quot;).length);" isComment="true"/>
						<outline text="$(&quot;.divBodyEditor&quot;).on (&quot;paste&quot;, function (ev) {" isComment="true">
							<outline text="console.log (&quot;paste received&quot;);" created="Fri, 20 Dec 2024 14:57:59 GMT"/>
							<outline text="});"/>
							</outline>
						<outline text="theEditor.subscribe (&quot;editablePaste&quot;, function (ev) {" isComment="true">
							<outline text="console.log (&quot;editablePaste detected...&quot;);"/>
							<outline text="function handleClipboardText (theText) {" created="Fri, 20 Dec 2024 14:25:18 GMT">
								<outline text="console.log (&quot;handleClipboardText: theText == &quot; + theText);" created="Fri, 20 Dec 2024 14:25:37 GMT"/>
								<outline text="function isValidURL (theString) {">
									<outline text="try {">
										<outline text="const url = new URL (theString);"/>
										<outline text="if (url.protocol == &quot;http:&quot;) {" created="Wed, 18 Dec 2024 17:25:43 GMT">
											<outline text="return (true);" created="Wed, 18 Dec 2024 17:26:23 GMT"/>
											<outline text="}" created="Wed, 18 Dec 2024 17:26:26 GMT"/>
											</outline>
										<outline text="if (url.protocol == &quot;https:&quot;) {" created="Wed, 18 Dec 2024 17:25:43 GMT">
											<outline text="return (true);" created="Wed, 18 Dec 2024 17:26:23 GMT"/>
											<outline text="}" created="Wed, 18 Dec 2024 17:26:26 GMT"/>
											</outline>
										<outline text="return (false);" created="Wed, 18 Dec 2024 17:26:35 GMT"/>
										<outline text="}" created="Wed, 18 Dec 2024 17:25:44 GMT"/>
										</outline>
									<outline text="catch (err) {" created="Wed, 18 Dec 2024 17:26:51 GMT">
										<outline text="return (false);" created="Wed, 18 Dec 2024 17:26:35 GMT"/>
										<outline text="}" created="Wed, 18 Dec 2024 17:26:59 GMT"/>
										</outline>
									<outline text="}" created="Wed, 18 Dec 2024 17:27:29 GMT"/>
									</outline>
								<outline text="function replaceSelectionWithLink (url) {">
									<outline text="const selection = window.getSelection ();"/>
									<outline text="if (selection.rangeCount &gt; 0) {">
										<outline text="const range = selection.getRangeAt (0);"/>
										<outline text="" created="Wed, 18 Dec 2024 17:28:54 GMT"/>
										<outline text="const link = document.createElement (&quot;a&quot;); //create new anchor element"/>
										<outline text="link.href = url;"/>
										<outline text="link.textContent = selection.toString ();"/>
										<outline text="" created="Wed, 18 Dec 2024 17:29:10 GMT"/>
										<outline text="range.deleteContents (); //replace contents with link"/>
										<outline text="range.insertNode (link);"/>
										<outline text="" created="Wed, 18 Dec 2024 17:29:53 GMT"/>
										<outline text="selection.removeAllRanges (); //deselect the text"/>
										<outline text="}" created="Wed, 18 Dec 2024 17:30:15 GMT"/>
										</outline>
									<outline text="}" created="Wed, 18 Dec 2024 17:30:24 GMT"/>
									</outline>
								<outline text="if (isValidURL (theText)) {" created="Fri, 20 Dec 2024 14:26:24 GMT">
									<outline text="ev.preventDefault ();"/>
									<outline text="replaceSelectionWithLink (theText);"/>
									<outline text="}" created="Fri, 20 Dec 2024 14:26:34 GMT"/>
									</outline>
								<outline text="}" created="Fri, 20 Dec 2024 14:25:30 GMT"/>
								</outline>
							<outline text="navigator.clipboard.readText ()" created="Fri, 20 Dec 2024 13:39:38 GMT">
								<outline text=".then (text =&gt; {" created="Fri, 20 Dec 2024 13:57:31 GMT">
									<outline text="handleClipboardText (text);" created="Fri, 20 Dec 2024 13:57:11 GMT"/>
									<outline text="})" created="Fri, 20 Dec 2024 13:56:52 GMT"/>
									</outline>
								<outline text=".catch (err =&gt; {" created="Fri, 20 Dec 2024 13:56:33 GMT">
									<outline text="console.log (err.message)" created="Fri, 20 Dec 2024 13:58:34 GMT"/>
									<outline text="});" created="Fri, 20 Dec 2024 13:58:36 GMT"/>
									</outline>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="" created="Fri, 20 Dec 2024 14:57:38 GMT"/>
						<outline text="theEditor.subscribe (&quot;editablePaste&quot;, function (ev) { //12/18/24 by DW" isComment="true" created="Wed, 18 Dec 2024 17:31:56 GMT">
							<outline text="console.log (&quot;theEditor.subscribe invoked&quot;);" created="Wed, 18 Dec 2024 17:36:39 GMT"/>
							<outline text="function getSelectedText () {" isComment="true">
								<outline text="const selection = window.getSelection ();"/>
								<outline text="if ((selection.rangeCount == 0) || selection.isCollapsed) {" created="Wed, 18 Dec 2024 17:40:06 GMT">
									<outline text="return (undefined);" created="Wed, 18 Dec 2024 17:40:16 GMT"/>
									<outline text="}" created="Wed, 18 Dec 2024 17:40:27 GMT"/>
									</outline>
								<outline text="else {" created="Wed, 18 Dec 2024 17:40:52 GMT">
									<outline text="return (selection.toString ());" created="Wed, 18 Dec 2024 17:40:58 GMT"/>
									<outline text="}" created="Wed, 18 Dec 2024 17:41:07 GMT"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="function isValidURL (theString) {" isComment="true">
								<outline text="try {">
									<outline text="const url = new URL (theString);"/>
									<outline text="if (url.protocol == &quot;http:&quot;) {" created="Wed, 18 Dec 2024 17:25:43 GMT">
										<outline text="return (true);" created="Wed, 18 Dec 2024 17:26:23 GMT"/>
										<outline text="}" created="Wed, 18 Dec 2024 17:26:26 GMT"/>
										</outline>
									<outline text="if (url.protocol == &quot;https:&quot;) {" created="Wed, 18 Dec 2024 17:25:43 GMT">
										<outline text="return (true);" created="Wed, 18 Dec 2024 17:26:23 GMT"/>
										<outline text="}" created="Wed, 18 Dec 2024 17:26:26 GMT"/>
										</outline>
									<outline text="return (false);" created="Wed, 18 Dec 2024 17:26:35 GMT"/>
									<outline text="}" created="Wed, 18 Dec 2024 17:25:44 GMT"/>
									</outline>
								<outline text="catch (err) {" created="Wed, 18 Dec 2024 17:26:51 GMT">
									<outline text="return (false);" created="Wed, 18 Dec 2024 17:26:35 GMT"/>
									<outline text="}" created="Wed, 18 Dec 2024 17:26:59 GMT"/>
									</outline>
								<outline text="}" created="Wed, 18 Dec 2024 17:27:29 GMT"/>
								</outline>
							<outline text="function replaceSelectionWithLink (url) {" isComment="true">
								<outline text="const selection = window.getSelection ();"/>
								<outline text="if (selection.rangeCount &gt; 0) {">
									<outline text="const range = selection.getRangeAt (0);"/>
									<outline text="" created="Wed, 18 Dec 2024 17:28:54 GMT"/>
									<outline text="const link = document.createElement (&quot;a&quot;); //create new anchor element"/>
									<outline text="link.href = url;"/>
									<outline text="link.textContent = selection.toString ();"/>
									<outline text="" created="Wed, 18 Dec 2024 17:29:10 GMT"/>
									<outline text="range.deleteContents (); //replace contents with link"/>
									<outline text="range.insertNode (link);"/>
									<outline text="" created="Wed, 18 Dec 2024 17:29:53 GMT"/>
									<outline text="selection.removeAllRanges (); //deselect the text"/>
									<outline text="}" created="Wed, 18 Dec 2024 17:30:15 GMT"/>
									</outline>
								<outline text="}" created="Wed, 18 Dec 2024 17:30:24 GMT"/>
								</outline>
							<outline text="const clipboardData = ev.clipboardData || window.clipboardData;" isComment="true"/>
							<outline text="const pastedText = clipboardData.getData (&quot;text&quot;);" isComment="true"/>
							<outline text="if (isValidURL (pastedText)) {" isComment="true" created="Wed, 18 Dec 2024 17:32:46 GMT">
								<outline text=" const selectedText = getSelectedText ();" created="Wed, 18 Dec 2024 17:33:45 GMT"/>
								<outline text="if (selectedText) {">
									<outline text="ev.preventDefault ();"/>
									<outline text="replaceSelectionWithLink (pastedText);"/>
									<outline text="}"/>
									</outline>
								<outline text="}" created="Wed, 18 Dec 2024 17:33:30 GMT"/>
								</outline>
							<outline text="});" created="Wed, 18 Dec 2024 17:32:28 GMT"/>
							</outline>
						<outline text="theEditor.subscribe (&quot;editablePaste&quot;, function (ev) {" isComment="true">
							<outline text="console.log (&quot;editablePaste detected...&quot;);"/>
							<outline text="navigator.clipboard.readText ()" created="Fri, 20 Dec 2024 13:39:38 GMT">
								<outline text=".then (text =&gt; {" created="Fri, 20 Dec 2024 13:57:31 GMT">
									<outline text="console.log (text);" created="Fri, 20 Dec 2024 13:57:11 GMT"/>
									<outline text="})" created="Fri, 20 Dec 2024 13:56:52 GMT"/>
									</outline>
								<outline text=".catch (err =&gt; {" created="Fri, 20 Dec 2024 13:56:33 GMT">
									<outline text="console.log (err.message)" created="Fri, 20 Dec 2024 13:58:34 GMT"/>
									<outline text="});" created="Fri, 20 Dec 2024 13:58:36 GMT"/>
									</outline>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="" isComment="true" created="Tue, 28 Jan 2025 16:50:39 GMT"/>
					<outline text="" created="Fri, 21 Feb 2025 22:01:35 GMT"/>
					<outline text="" created="Fri, 21 Feb 2025 22:01:16 GMT"/>
					<outline text="" created="Mon, 10 Feb 2025 14:43:37 GMT"/>
					<outline text="" created="Mon, 10 Feb 2025 14:43:38 GMT"/>
					<outline text="" created="Thu, 13 Feb 2025 21:26:27 GMT"/>
					<outline text="function processHashtags (theText) { //2/13/25 by DW -- returns a struct that goes in the record" isComment="true" created="Thu, 13 Feb 2025 21:25:05 GMT">
						<outline text="Changes" isComment="true" created="Thu, 13 Feb 2025 21:26:48 GMT">
							<outline text="2/13/25; 4:26:51 PM by DW" created="Thu, 13 Feb 2025 21:26:50 GMT">
								<outline text="{">
									<outline text="text: &quot;Testing: #hello and #goodbye are two tags.&quot;,"/>
									<outline text="facets: [" created="Thu, 13 Feb 2025 21:29:28 GMT">
										<outline text="{" created="Thu, 13 Feb 2025 21:29:50 GMT">
											<outline text="index: {" created="Thu, 13 Feb 2025 21:30:15 GMT">
												<outline text="byteStart: 9,"/>
												<outline text="byteEnd: 15"/>
												<outline text="}," created="Thu, 13 Feb 2025 21:30:20 GMT"/>
												</outline>
											<outline text="features: [" created="Thu, 13 Feb 2025 21:30:41 GMT">
												<outline text="{" created="Thu, 13 Feb 2025 21:31:49 GMT">
													<outline text="$type: &quot;app.bsky.richtext.facet#tag&quot;,"/>
													<outline text="tag: &quot;hello&quot;"/>
													<outline text="}" created="Thu, 13 Feb 2025 21:30:43 GMT"/>
													</outline>
												<outline text="]" created="Thu, 13 Feb 2025 21:32:02 GMT"/>
												</outline>
											<outline text="}," created="Thu, 13 Feb 2025 21:29:51 GMT"/>
											</outline>
										<outline text="{" created="Thu, 13 Feb 2025 21:29:52 GMT">
											<outline text="index: {" created="Thu, 13 Feb 2025 21:33:08 GMT">
												<outline text="byteStart: 20,"/>
												<outline text="byteEnd: 28"/>
												<outline text="}," created="Thu, 13 Feb 2025 21:33:10 GMT"/>
												</outline>
											<outline text="features: [" created="Thu, 13 Feb 2025 21:33:15 GMT">
												<outline text="{" created="Thu, 13 Feb 2025 21:33:21 GMT">
													<outline text="$type: &quot;app.bsky.richtext.facet#tag&quot;,"/>
													<outline text="tag: &quot;goodbye&quot;"/>
													<outline text="}" created="Thu, 13 Feb 2025 21:33:23 GMT"/>
													</outline>
												<outline text="]" created="Thu, 13 Feb 2025 21:33:29 GMT"/>
												</outline>
											<outline text="}" created="Thu, 13 Feb 2025 21:29:54 GMT"/>
											</outline>
										<outline text="]" created="Thu, 13 Feb 2025 21:29:43 GMT"/>
										</outline>
									</outline>
								</outline>
							</outline>
						<outline text="var jstruct = {" created="Thu, 13 Feb 2025 21:57:57 GMT">
							<outline text="text: theText," created="Thu, 13 Feb 2025 21:59:10 GMT"/>
							<outline text="facets: new Array ()" created="Thu, 13 Feb 2025 21:59:28 GMT"/>
							<outline text="};" created="Thu, 13 Feb 2025 21:59:02 GMT"/>
							</outline>
						<outline text="function addFacet (ixstart, ix, tag) {" created="Thu, 13 Feb 2025 22:05:28 GMT">
							<outline text="if (tag.length &gt; 0) {" created="Thu, 13 Feb 2025 22:08:28 GMT">
								<outline text="console.log (`tag == ${tag}, ixstart == ${ixstart}, ixend = ${ix}`)" created="Thu, 13 Feb 2025 21:55:17 GMT"/>
								<outline text="jstruct.facets.push ({" created="Thu, 13 Feb 2025 21:59:41 GMT">
									<outline text="index: {" created="Thu, 13 Feb 2025 22:00:01 GMT">
										<outline text="byteStart: ixstart,"/>
										<outline text="byteEnd: ix"/>
										<outline text="}," created="Thu, 13 Feb 2025 22:00:12 GMT"/>
										</outline>
									<outline text="features: [" created="Thu, 13 Feb 2025 22:00:51 GMT">
										<outline text="{" created="Thu, 13 Feb 2025 22:01:21 GMT">
											<outline text="$type: &quot;app.bsky.richtext.facet#tag&quot;,"/>
											<outline text="tag"/>
											<outline text="}" created="Thu, 13 Feb 2025 22:01:23 GMT"/>
											</outline>
										<outline text="]" created="Thu, 13 Feb 2025 22:00:54 GMT"/>
										</outline>
									<outline text="});" created="Thu, 13 Feb 2025 21:59:55 GMT"/>
									</outline>
								<outline text="}" created="Thu, 13 Feb 2025 22:08:33 GMT"/>
								</outline>
							<outline text="}" created="Thu, 13 Feb 2025 22:05:39 GMT"/>
							</outline>
						<outline text="var ixstart = undefined, tag = &quot;&quot;;" created="Thu, 13 Feb 2025 21:42:55 GMT"/>
						<outline text="for (var ix = 0; ix &lt; theText.length; ix++) {" created="Thu, 13 Feb 2025 21:51:01 GMT">
							<outline text="const ch = theText [ix];" created="Thu, 13 Feb 2025 21:51:24 GMT"/>
							<outline text="if (ixstart !== undefined) { //we're processing a tag" created="Thu, 13 Feb 2025 21:47:01 GMT">
								<outline text="if (ch == &quot; &quot;) {" created="Thu, 13 Feb 2025 21:43:37 GMT">
									<outline text="addFacet (ixstart, ix, tag);" created="Thu, 13 Feb 2025 22:05:05 GMT"/>
									<outline text="ixstart = undefined;" created="Thu, 13 Feb 2025 21:45:48 GMT"/>
									<outline text="tag = &quot;&quot;;" created="Thu, 13 Feb 2025 21:45:54 GMT"/>
									<outline text="}" created="Thu, 13 Feb 2025 21:43:43 GMT"/>
									</outline>
								<outline text="else {" created="Thu, 13 Feb 2025 21:44:47 GMT">
									<outline text="tag += ch;" created="Thu, 13 Feb 2025 21:44:53 GMT"/>
									<outline text="}" created="Thu, 13 Feb 2025 21:44:49 GMT"/>
									</outline>
								<outline text="}" created="Thu, 13 Feb 2025 21:47:04 GMT"/>
								</outline>
							<outline text="else {" created="Thu, 13 Feb 2025 21:47:48 GMT">
								<outline text="if (ch == &quot;#&quot;) {" created="Thu, 13 Feb 2025 21:42:04 GMT">
									<outline text="ixstart = ix;" created="Thu, 13 Feb 2025 21:42:42 GMT"/>
									<outline text="}" created="Thu, 13 Feb 2025 21:42:16 GMT"/>
									</outline>
								<outline text="}" created="Thu, 13 Feb 2025 21:47:50 GMT"/>
								</outline>
							<outline text="}" created="Thu, 13 Feb 2025 21:51:16 GMT"/>
							</outline>
						<outline text="if (ixstart !== undefined) { " created="Thu, 13 Feb 2025 22:04:25 GMT">
							<outline text="addFacet (ixstart, ix, tag);" created="Thu, 13 Feb 2025 22:05:05 GMT"/>
							<outline text="}" created="Thu, 13 Feb 2025 22:04:36 GMT"/>
							</outline>
						<outline text="console.log (jsonStringify (jstruct));" created="Thu, 13 Feb 2025 22:02:52 GMT"/>
						<outline text="return (jstruct);" created="Thu, 13 Feb 2025 22:06:32 GMT"/>
						<outline text="}" created="Thu, 13 Feb 2025 21:25:52 GMT"/>
						</outline>
					<outline text="function startup () {" isComment="true" created="Thu, 13 Feb 2025 21:26:34 GMT">
						<outline text="processHashtags (&quot;Testing: #hello and #goodbye are two tags. # &quot;);" created="Thu, 13 Feb 2025 21:26:34 GMT"/>
						<outline text="}" created="Thu, 13 Feb 2025 22:07:09 GMT"/>
						</outline>
					</outline>
				</outline>
			<outline text="index.html" created="Thu, 07 Apr 2022 16:25:39 GMT">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;Baseline story mockup&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="" created="Fri, 20 Dec 2024 14:20:23 GMT"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="" created="Fri, 20 Dec 2024 14:20:18 GMT"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css?x=2&quot;/&gt;"/>
						<outline text="" created="Fri, 20 Dec 2024 14:20:27 GMT"/>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;" created="Mon, 14 Apr 2025 21:40:09 GMT">
							<outline text="&lt;div class=&quot;divPageTop&quot;&gt;" created="Wed, 30 Apr 2025 14:13:16 GMT">
								<outline text="&lt;div class=&quot;divSiteTitle&quot;&gt;Scott's WordLand&lt;/div&gt;" created="Wed, 30 Apr 2025 14:13:26 GMT"/>
								<outline text="&lt;div class=&quot;divSiteDescription&quot;&gt;Testing the WordLand Baseline Theme&lt;/div&gt;" created="Wed, 30 Apr 2025 14:13:38 GMT"/>
								<outline text="&lt;/div&gt;" created="Wed, 30 Apr 2025 14:13:24 GMT"/>
								</outline>
							<outline text="&lt;div class=&quot;divStory&quot;&gt;" created="Wed, 30 Apr 2025 14:13:56 GMT">
								<outline text="&lt;div class=&quot;divStoryTitle&quot;&gt;" created="Wed, 30 Apr 2025 14:14:08 GMT">
									<outline text="First basemen and pasta" created="Wed, 30 Apr 2025 14:14:57 GMT"/>
									<outline text="&lt;/div&gt;" created="Wed, 30 Apr 2025 14:15:01 GMT"/>
									</outline>
								<outline text="&lt;div class=&quot;divLineUnderStoryTitle&quot;&gt;" created="Wed, 30 Apr 2025 14:15:09 GMT">
									<outline text="April 30, 2025 by Dave Winer." created="Wed, 30 Apr 2025 14:15:38 GMT"/>
									<outline text="&lt;/div&gt;" created="Wed, 30 Apr 2025 14:15:27 GMT"/>
									</outline>
								<outline text="&lt;div class=&quot;divStoryBody&quot;&gt;" created="Wed, 30 Apr 2025 14:14:08 GMT">
									<outline text="&lt;p&gt;This is a list of things that I want to try out on the new baseline theme.&lt;/p&gt;"/>
									<outline text="&lt;p&gt;Here are five great MLB first basemen and what made each of them especially interesting:&lt;/p&gt;"/>
									<outline text="&lt;ol&gt;" created="Wed, 30 Apr 2025 14:16:28 GMT">
										<outline text="&lt;li&gt;&lt;p&gt;Lou Gehrig -- The &quot;Iron Horse&quot; of the Yankees, famous for his durability, humility, and &lt;a href=&quot;https://baseballhall.org/discover-more/stories/baseball-history/lou-gehrig-luckiest-man&quot;&gt;tragic early retirement&lt;/a&gt; due to ALS, which now bears his name.&lt;/p&gt;&lt;/li&gt;"/>
										<outline text="&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Albert_Pujols&quot;&gt;Albert Pujols&lt;/a&gt; -- A modern legend known for his all-around hitting, consistency, and longevity, finishing with over 700 home runs.&lt;/p&gt;&lt;/li&gt;"/>
										<outline text="&lt;li&gt;&lt;p&gt;Willie McCovey -- Towering lefty slugger for the Giants, feared for his monstrous power and iconic presence in the batter's box.&lt;/p&gt;&lt;/li&gt;"/>
										<outline text="&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Keith_Hernandez&quot;&gt;Keith Hernandez&lt;/a&gt; -- Brilliant defensively, redefining how first base was played with range, quickness, and leadership -- also a memorable personality.&lt;/p&gt;&lt;/li&gt;"/>
										<outline text="&lt;li&gt;&lt;p&gt;Frank Thomas -- &quot;The Big Hurt&quot; dominated the '90s with his intimidating size and incredible hitting eye, combining power with patience.&lt;/p&gt;&lt;/li&gt;"/>
										<outline text="&lt;/ol&gt;" created="Wed, 30 Apr 2025 14:16:29 GMT"/>
										</outline>
									<outline text="&lt;h3&gt;Italian pasta!&lt;/h3&gt;" created="Wed, 30 Apr 2025 15:22:11 GMT">
										<outline text="&lt;p&gt;Now three short paragraphs to see what they look like when not inside a list element.&lt;/p&gt;" created="Wed, 30 Apr 2025 14:17:40 GMT"/>
										<outline text="&lt;p&gt;Italian pasta comes in hundreds of shapes and varieties, from long strands of spaghetti to tube shaped penne to stuffed ravioli. Each region of Italy has its own traditional pasta dishes, with northern regions favoring egg pasta often served with cream based sauces, while southern regions prefer dried pasta paired with tomato sauces and seafood. The key to authentic Italian pasta lies in cooking it al dente and using fresh, simple ingredients that complement rather than overwhelm the pasta itself.&lt;/p&gt;"/>
										<outline text="&lt;p&gt;Pizza originated in &lt;a href=&quot;https://en.wikipedia.org/wiki/Naples&quot;&gt;Naples&lt;/a&gt; as a simple flatbread topped with tomatoes, but has evolved into countless regional variations throughout Italy. Traditional &lt;a href=&quot;https://en.wikipedia.org/wiki/Neapolitan_pizza&quot;&gt;Neapolitan pizza&lt;/a&gt; features a soft, thin crust with minimal toppings of San Marzano tomatoes, mozzarella cheese, fresh basil, and olive oil, cooked quickly in extremely hot wood fired ovens. Roman pizza, by contrast, has a thinner, crispier crust, while Sicilian pizza is characterized by its thick, rectangular shape and hearty toppings.&lt;/p&gt;"/>
										<outline text="&lt;p&gt;Italian cuisine celebrates seasonal ingredients through antipasti, small appetizers that showcase the bounty of each season. These may include marinated vegetables, cured meats like prosciutto and salami, and regional cheeses such as Parmigiano Reggiano, Pecorino, and fresh mozzarella. Antipasti exemplify the Italian approach to dining, where meals are unhurried social experiences meant to be savored over several courses, accompanied by local wines that complement the flavors of each dish.&lt;/p&gt;"/>
										</outline>
									<outline text="&lt;h3&gt;What is this?&lt;/h3&gt;" created="Thu, 01 May 2025 13:37:37 GMT">
										<outline text="&lt;p&gt;For more info see the &lt;a href=&quot;https://github.com/scripting/baselinePlayground&quot;&gt;baselinePlayground&lt;/a&gt; repo on GitHub.&lt;/p&gt;" created="Thu, 01 May 2025 13:37:46 GMT"/>
										</outline>
									<outline text="&lt;/div&gt;" created="Wed, 30 Apr 2025 14:14:43 GMT"/>
									</outline>
								<outline text="&lt;div class=&quot;divCategories&quot;&gt;" created="Wed, 30 Apr 2025 14:17:55 GMT">
									<outline text="Categories: Testing, WordLand." created="Wed, 30 Apr 2025 14:18:15 GMT"/>
									<outline text="&lt;/div&gt;" created="Wed, 30 Apr 2025 14:18:07 GMT"/>
									</outline>
								<outline text="&lt;/div&gt;" created="Wed, 30 Apr 2025 14:14:06 GMT"/>
								</outline>
							<outline text="&lt;div class=&quot;divFooter&quot;&gt;" created="Wed, 30 Apr 2025 14:18:59 GMT">
								<outline text="&lt;p&gt;&lt;img src=&quot;https://imgs.scripting.com/2025/04/30/icons.png&quot;&gt;&lt;/p&gt;" created="Wed, 30 Apr 2025 14:22:14 GMT"/>
								<outline text="&lt;p&gt;Last update: 4/30/25; 10:20:16 AM.&lt;/p&gt;" created="Wed, 30 Apr 2025 14:19:11 GMT"/>
								<outline text="&lt;p&gt;Written in &lt;a href=&quot;https://wordland.social/&quot; rel=&quot;nofollow&quot;&gt;WordLand&lt;/a&gt;, running on the &lt;a href=&quot;https://wordpress.org/&quot; rel=&quot;nofollow&quot;&gt;WordPress&lt;/a&gt; platform.&lt;/p&gt;"/>
								<outline text="&lt;/div&gt;"/>
								<outline text="&lt;/div&gt;" created="Wed, 30 Apr 2025 14:19:09 GMT"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Mon, 14 Apr 2025 21:57:48 GMT"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Thu, 01 May 2025 13:12:43 GMT">
				<outline text="# baselinePlayground" created="Thu, 01 May 2025 13:12:46 GMT">
					<outline text="A &lt;a href=&quot;http://scripting.com/code/baselineplayground/&quot;&gt;prototype&lt;/a&gt; of what a story page might look like on our baseline site for WordLand. "/>
					<outline text="Quick to iterate and tweak, to share ideas with people working on the WordPress theme for a site." created="Thu, 01 May 2025 13:19:09 GMT"/>
					</outline>
				<outline text="### Why post it publicly?" created="Thu, 01 May 2025 13:13:28 GMT">
					<outline text="I never made one of these before and thought it was worth sharing, or just writing about." created="Thu, 01 May 2025 13:13:39 GMT"/>
					<outline text="The thing is that creating a theme for a WordPress site is complicated. So I asked a longtime friend Scott Hanson, to do the WordPress work, and I would contribute as a writer and someone who uses CSS to design applications, and has never really liked doing it for websites. I have had luck with this approach when both perspectives are needed to develop something, and if you try to do both, you don't get something good from either perspective. We did this a lot at UserLand and before that at Living Videotext. I learned it from Mitch Kapor when we were both at Personal Software in the 80s." created="Thu, 01 May 2025 13:13:57 GMT"/>
					<outline text="Anyway, it might become handy if WordLand catches on and others want to experiment with interfaces for their sites, and be able to make changes quickly to try out new ideas. " created="Thu, 01 May 2025 13:16:51 GMT"/>
					<outline text="Dave Winer, May 2025" created="Thu, 01 May 2025 13:17:47 GMT"/>
					</outline>
				<outline text="### Links" created="Thu, 01 May 2025 13:25:16 GMT">
					<outline text="The &lt;a href=&quot;http://scripting.com/code/baselineplayground/&quot;&gt;page&lt;/a&gt; I was working on in May 2025." created="Thu, 01 May 2025 13:25:21 GMT"/>
					<outline text="The &lt;a href=&quot;worknotes.md&quot;&gt;worknotes&lt;/a&gt; for this project." created="Thu, 01 May 2025 13:26:18 GMT"/>
					<outline text="The wordlandSupport &lt;a href=&quot;https://github.com/scripting/wordlandSupport/issues/71#issuecomment-2844852188&quot;&gt;thread&lt;/a&gt; where we worked on this." created="Thu, 01 May 2025 13:28:33 GMT"/>
					<outline text="Scott's &lt;a href=&quot;https://github.com/scotthansonde/wordlandBaseline&quot;&gt;repo&lt;/a&gt; for work on the baseline theme." created="Wed, 07 May 2025 12:37:25 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Wed, 08 May 2024 13:39:58 GMT">
			<outline text="nodeEditorSuite.utilities.buildPlayground ()" created="Wed, 10 Jan 2024 21:45:16 GMT"/>
			</outline>
		</body>
	</opml>
